"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[105],{1895:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var s=r(4848),i=r(8453);const t=r.p+"assets/images/Logs-36ba636f69f0d6bfcf49c6ce10f517b0.png",c={},l="\ud83d\udd0e Logs",o={id:"features/logs",title:"\ud83d\udd0e Logs",description:"After receiving your request to send a notification, we start tracking the progress of the notification and show that in our Logs dashboard.",source:"@site/docs/features/logs.md",sourceDirName:"features",slug:"/features/logs",permalink:"/features/logs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u2699 Testing Environments",permalink:"/features/environments"},next:{title:"\ud83d\udd04 Parameters (Merge Tags)",permalink:"/features/mergetags"}},d={},a=[{value:"Notification States",id:"notification-states",level:2},{value:"Tracked Events",id:"tracked-events",level:2},{value:"Custom Queries",id:"custom-queries",level:2},{value:"Query Structure",id:"query-structure",level:3},{value:"Query Format",id:"query-format",level:5},{value:"Property Examples:",id:"property-examples",level:5},{value:"Operators:",id:"operators",level:5},{value:"MatchedPattern:",id:"matchedpattern",level:5},{value:"AND/OR Queries",id:"andor-queries",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-logs",children:"\ud83d\udd0e Logs"})}),"\n",(0,s.jsx)(n.p,{children:"After receiving your request to send a notification, we start tracking the progress of the notification and show that in our Logs dashboard."}),"\n",(0,s.jsx)(n.p,{children:"This is specifically useful for ensuring new notifications are working correctly and for customer support staff to handle tickets related to notifications."}),"\n","\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["To programmatically access the log of your requests, you can use the ",(0,s.jsx)(n.a,{href:"/reference/server#querylogs",children:"queryLogs"})," method."]})}),"\n",(0,s.jsx)("img",{src:t,style:{maxWidth:800,borderRadius:8,marginTop:16,width:"100%"}}),"\n",(0,s.jsx)(n.h2,{id:"notification-states",children:"Notification States"}),"\n",(0,s.jsx)(n.p,{children:"Each request creates a record in the logs table with either of the following statuses:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"received"}),": notification is in this state until it enters ",(0,s.jsx)(n.code,{children:"success"})," or ",(0,s.jsx)(n.code,{children:"failure"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"success"}),": we have successfully delivered everything to the expected channels"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"failure"}),": something has gone wrong or not delivered (see events below)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tracked-events",children:"Tracked Events"}),"\n",(0,s.jsx)(n.p,{children:"When you click on a notification in the log table, you will see the following events:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Received: Our servers received your request and have begun processing it."}),"\n",(0,s.jsx)(n.li,{children:"Ignored: The request was ignored due to an expected condition such as dashboard preferences, user preferences or plan limits."}),"\n",(0,s.jsx)(n.li,{children:"Sending: We have validated your request and are going to send it."}),"\n",(0,s.jsx)(n.li,{children:"Sent: We have successfully sent the notification to responsible 3rd-parties such email servers or mobile networks."}),"\n",(0,s.jsx)(n.li,{children:"Delivered: The notification was successfully delivered to the user."}),"\n",(0,s.jsx)(n.li,{children:"Failed: Something went wrong unexpectedly during processing or delivery. E.g. Bad parameters, email bounces."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Email Specific Sub-Events:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Failed - Bounce: The recipient's mail server permanently rejected the email"}),"\n",(0,s.jsx)(n.li,{children:"Failed - Delivery Delay: The email couldn't be delivered to the recipient\u2019s mail server because a temporary issue occurred. Delivery delays can occur, for example, when the recipient's inbox is full, or when the receiving email server experiences a transient issue."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"SMS Specific Sub-Events:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Failed - Undelivered: We have received a delivery receipt indicating that the message was not delivered. This can happen for a number of reasons, including carrier content filtering, availability of the destination handset, etc."}),"\n",(0,s.jsx)(n.li,{children:"Failed - Infrastructure: The message could not be sent due to problems with the underlying telecom service."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Call Specific Sub-Events:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Delivered - Completed: The call was made, answered and disconnected."}),"\n",(0,s.jsx)(n.li,{children:"Delivered - Busy: NotificationAPI dialled the number, but received a busy response."}),"\n",(0,s.jsx)(n.li,{children:"Delivered - No Answer: NotificationAPI dialled the number, but no one answered after 30 seconds."}),"\n",(0,s.jsx)(n.li,{children:"Failed - Cannot Reach: We could not connect the call. Possible causes include the destination being unreachable or the number may have been input incorrectly."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"custom-queries",children:"Custom Queries"}),"\n",(0,s.jsxs)(n.p,{children:["Besides the predefined filters on the logs table, you can use any custom queries to dig deep. For example: ",(0,s.jsx)(n.code,{children:'$.request.mergeTags.firstName="Jane"'})]}),"\n",(0,s.jsxs)(n.p,{children:["You can search for anything in the ",(0,s.jsx)(n.code,{children:"$.request"}),", which contains the ",(0,s.jsx)(n.a,{href:"/reference/server#send",children:"original parameters you passed to send()"}),". Here's an example of a ",(0,s.jsx)(n.code,{children:"$.request"})," object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="$.request"',children:"{\n    notificationId: '...',\n    user: {\n        id: '123',\n        email: 'jane@doe.com',\n        number: '+19999999999'\n    },\n    mergeTags: {\n        firstName: 'jane'\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"query-structure",children:"Query Structure"}),"\n",(0,s.jsx)(n.h5,{id:"query-format",children:"Query Format"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Property Operator MatchedPattern"})}),"\n",(0,s.jsx)(n.h5,{id:"property-examples",children:"Property Examples:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$.trackingId"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$.request.notificationId"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$.request.user.number"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$.request.mergeTags.firstName"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$.request.mergeTags.products[0].sku.title"})}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"operators",children:"Operators:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["String Operators: ",(0,s.jsx)(n.code,{children:"="}),", ",(0,s.jsx)(n.code,{children:"!="})]}),"\n",(0,s.jsxs)(n.li,{children:["Numeric Operators: ",(0,s.jsx)(n.code,{children:"="})," ",(0,s.jsx)(n.code,{children:"!="})," ",(0,s.jsx)(n.code,{children:">"})," ",(0,s.jsx)(n.code,{children:">="})," ",(0,s.jsx)(n.code,{children:"<"})," ",(0,s.jsx)(n.code,{children:"<="})]}),"\n",(0,s.jsxs)(n.li,{children:["Logical Operators:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"IS"}),", can only be used with ",(0,s.jsx)(n.code,{children:"NULL"}),", ",(0,s.jsx)(n.code,{children:"FALSE"})," or ",(0,s.jsx)(n.code,{children:"TRUE"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NOT EXISTS"}),", e.g. ",(0,s.jsx)(n.code,{children:"$.request.user.number NOT EXISTS"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"matchedpattern",children:"MatchedPattern:"}),"\n",(0,s.jsxs)(n.p,{children:["A string or number. You can use ",(0,s.jsx)(n.code,{children:"*"})," as a wildcard for string matching. Example: ",(0,s.jsx)(n.code,{children:'$.request.user.email="*@gmail.com"'})]}),"\n",(0,s.jsx)(n.h3,{id:"andor-queries",children:"AND/OR Queries"}),"\n",(0,s.jsxs)(n.p,{children:["You can use ",(0,s.jsx)(n.code,{children:"&&"}),", ",(0,s.jsx)(n.code,{children:"||"})," and ",(0,s.jsx)(n.code,{children:"()"})," to combine multiple queries. Examples:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"($.request.notificationId='new-user' && $.request.user.number='+19999999999') ||\n    $.request.mergeTags.firstName=\"Jane\"\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>l});var s=r(6540);const i={},t=s.createContext(i);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);