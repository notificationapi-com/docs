"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[154],{8783:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=n(4848),r=n(8453);const o=n.p+"assets/images/ios_request_auth-d74ee9a9d8824285c52092b0c4a3cf55.png",a={sidebar_position:5},s="iOS SDK",c={id:"reference/ios-sdk",title:"iOS SDK",description:"The iOS SDK is used to recieve push notifications and handle device token synchronization with NotificationAPI.",source:"@site/docs/reference/ios-sdk.md",sourceDirName:"reference",slug:"/reference/ios-sdk",permalink:"/reference/ios-sdk",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Vanilla JS (Core / Headless)",permalink:"/reference/js-core"},next:{title:"Android SDK",permalink:"/reference/android-sdk"}},d={},l=[{value:"Setup",id:"setup",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"NotificationApiAppDelegate",id:"notificationapiappdelegate",level:2},{value:"func notificationApi(apnTokenDidChange token: String)",id:"func-notificationapiapntokendidchange-token-string",level:3},{value:"Parameters",id:"parameters",level:4},{value:"func notificationApi(didClickOnBackgroundNotification info: [AnyHashable : Any])",id:"func-notificationapididclickonbackgroundnotification-info-anyhashable--any",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"NotificationApi",id:"notificationapi",level:2},{value:"var shared: NotificationApi",id:"var-shared-notificationapi",level:3},{value:"func configure(withCredentials credentials: NotificationApiCredentials, withConfig config: NotificationApiConfig? = nil)",id:"func-configurewithcredentials-credentials-notificationapicredentials-withconfig-config-notificationapiconfig--nil",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"func requestAuthorization(completionHandler handler: @escaping (Bool, Error?) -&gt; Void)",id:"func-requestauthorizationcompletionhandler-handler-escaping-bool-error---void",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"func syncApn(token: String, completionHandler handler: @escaping (Error?) -&gt; Void)",id:"func-syncapntoken-string-completionhandler-handler-escaping-error---void",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"NotificationApiCredentials",id:"notificationapicredentials",level:2},{value:"func init(clientId: String, userId: String, hashedUserId: String? = nil)",id:"func-initclientid-string-userid-string-hasheduserid-string--nil",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"NotificationApiConfig",id:"notificationapiconfig",level:2},{value:"func init(baseUrl: String)",id:"func-initbaseurl-string",level:3},{value:"Parameters",id:"parameters-6",level:4}];function h(i){const e={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"ios-sdk",children:"iOS SDK"}),"\n",(0,t.jsxs)(e.p,{children:["The iOS SDK is used to recieve ",(0,t.jsx)(e.strong,{children:"push notifications"})," and handle device token synchronization with NotificationAPI."]}),"\n",(0,t.jsx)(e.p,{children:"Supported environments:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"iOS 13 and above"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(e.p,{children:["You can follow Apple's instructions for installing a package dependency ",(0,t.jsx)(e.a,{href:"https://developer.apple.com/documentation/xcode/adding-package-dependencies-to-your-app",children:"here"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["The URL is ",(0,t.jsx)(e.code,{children:"https://github.com/notificationapi-com/notificationapi-ios-sdk.git"})]}),"\n",(0,t.jsx)(e.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(e.p,{children:["We highly recommend to extend from ",(0,t.jsx)(e.code,{children:"NotificationApiAppDelegate.swift"})," and use that class as your app's delegate."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-swift",metastring:'title="Example AppDelegate"',children:'class AppDelegate: NotificationApiAppDelegate {\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {\n        NotificationApi.shared.configure(withCredentials: NotificationApiCredentials(clientId: "YOUR_CLIENT_ID", userId: "YOUR_USER_ID"))\n\n        NotificationApi.shared.requestAuthorization { granted, _ in\n            print("Is authorized?: \\(granted)")\n        }\n\n        return true\n    }\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["You must configure the SDK with your ",(0,t.jsx)(e.code,{children:"NotificationAPI"})," credentials. It is recommended to configure the SDK as early as possible. You must also request notification authorization from the user."]}),"\n",(0,t.jsxs)(e.p,{children:["You are now ready to recieve push notifications from NotificationAPI! ","\ud83c\udf89"]}),"\n",(0,t.jsx)(e.h2,{id:"notificationapiappdelegate",children:"NotificationApiAppDelegate"}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"NotificationApiAppDelegate"})," class handles device token synchronization with NotificationAPI and it is recommended to implement it as your own app delegate."]}),"\n",(0,t.jsx)(e.h3,{id:"func-notificationapiapntokendidchange-token-string",children:"func notificationApi(apnTokenDidChange token: String)"}),"\n",(0,t.jsx)(e.p,{children:"This function is called whenever the device generates a new APN token. You can use this to sync the device token to services other than NotificationAPI."}),"\n",(0,t.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"token"}),(0,t.jsx)(e.br,{}),"\n","Type: String"]}),"\n",(0,t.jsx)(e.p,{children:"The device token."}),"\n",(0,t.jsx)(e.h3,{id:"func-notificationapididclickonbackgroundnotification-info-anyhashable--any",children:"func notificationApi(didClickOnBackgroundNotification info: [AnyHashable : Any])"}),"\n",(0,t.jsx)(e.p,{children:"This function is called when an user clicks on the push notification while it is in the background."}),"\n",(0,t.jsx)(e.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"info"}),(0,t.jsx)(e.br,{}),"\n","Type: [AnyHashable : Any]"]}),"\n",(0,t.jsx)(e.p,{children:"A dictionary containing user info that was provided to the notification."}),"\n",(0,t.jsx)(e.h2,{id:"notificationapi",children:"NotificationApi"}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"NotificationApi"})," class is the interface to NotificationAPI."]}),"\n",(0,t.jsx)(e.h3,{id:"var-shared-notificationapi",children:"var shared: NotificationApi"}),"\n",(0,t.jsxs)(e.p,{children:["The app's instance of ",(0,t.jsx)(e.code,{children:"NotificationApi"}),". Always use this to retrieve an instance of ",(0,t.jsx)(e.code,{children:"NotificationApi"}),": do not instantiate ",(0,t.jsx)(e.code,{children:"NotificationApi"})," directly."]}),"\n",(0,t.jsx)(e.h3,{id:"func-configurewithcredentials-credentials-notificationapicredentials-withconfig-config-notificationapiconfig--nil",children:"func configure(withCredentials credentials: NotificationApiCredentials, withConfig config: NotificationApiConfig? = nil)"}),"\n",(0,t.jsxs)(e.p,{children:["Configures ",(0,t.jsx)(e.code,{children:"NotificationApi"})," to use your credentials. This should be invoked as early as possible (such as within ",(0,t.jsx)(e.code,{children:"application(didFinishLaunchingWithOptions:)"}),") to ensure that the user does not miss any push notifications."]}),"\n",(0,t.jsx)(e.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"credentials"})," (required)",(0,t.jsx)(e.br,{}),"\n","Type: NotificationApiCredentials"]}),"\n",(0,t.jsxs)(e.p,{children:["Your NotificationAPI credentials. You can retrieve them from ",(0,t.jsx)(e.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"config"}),(0,t.jsx)(e.br,{}),"\n","Type: NotificationApiConfig"]}),"\n",(0,t.jsx)(e.p,{children:"Config object for the NotificationApi SDK."}),"\n",(0,t.jsx)(e.h3,{id:"func-requestauthorizationcompletionhandler-handler-escaping-bool-error---void",children:"func requestAuthorization(completionHandler handler: @escaping (Bool, Error?) -> Void)"}),"\n",(0,t.jsx)(e.p,{children:"Requests the user's permission to recieve push notifications."}),"\n","\n",(0,t.jsx)("img",{src:o}),"\n",(0,t.jsx)(e.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"handler"})," (required)"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"granted"}),(0,t.jsx)(e.br,{}),"\n","Type: Boolean"]}),"\n",(0,t.jsx)(e.p,{children:"If the app is authorized to recieve notifications."}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"error"}),(0,t.jsx)(e.br,{}),"\n","Type: Error"]}),"\n",(0,t.jsx)(e.p,{children:"An error object that indicates that an error occurred while trying to request authorization."}),"\n",(0,t.jsxs)(e.admonition,{type:"info",children:[(0,t.jsx)(e.p,{children:"There is also an async version that can be used like the following:"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-swift",children:"func NotificationApi.shared.requestAuthorization() async throws -> Bool\n"})})]}),"\n",(0,t.jsx)(e.h3,{id:"func-syncapntoken-string-completionhandler-handler-escaping-error---void",children:"func syncApn(token: String, completionHandler handler: @escaping (Error?) -> Void)"}),"\n",(0,t.jsx)(e.p,{children:"Sync the device token with NotificationAPI."}),"\n",(0,t.jsx)(e.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"token"})," (required)",(0,t.jsx)(e.br,{}),"\n","Type: String"]}),"\n",(0,t.jsxs)(e.p,{children:["The device token. Can be retrieved via ",(0,t.jsx)(e.code,{children:"notificationApi(apnTokenDidChange:)"}),"."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.code,{children:"handler"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"error"}),(0,t.jsx)(e.br,{}),"\n","Type: Error"]}),"\n",(0,t.jsx)(e.p,{children:"An error object that indicates that an error occurred while trying to request authorization."}),"\n",(0,t.jsxs)(e.admonition,{type:"info",children:[(0,t.jsx)(e.p,{children:"There is also an async version that can be used like the following:"}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-swift",children:"func syncApn(token: String) async throws\n"})})]}),"\n",(0,t.jsx)(e.h2,{id:"notificationapicredentials",children:"NotificationApiCredentials"}),"\n",(0,t.jsx)(e.p,{children:"An object containing credentials for NotificationAPI."}),"\n",(0,t.jsx)(e.h3,{id:"func-initclientid-string-userid-string-hasheduserid-string--nil",children:"func init(clientId: String, userId: String, hashedUserId: String? = nil)"}),"\n",(0,t.jsx)(e.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"clientId"})," (required)",(0,t.jsx)(e.br,{}),"\n","Type: String"]}),"\n",(0,t.jsx)(e.p,{children:"Your NotificationAPI client id."}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"userId"})," (required)",(0,t.jsx)(e.br,{}),"\n","Type: String"]}),"\n",(0,t.jsx)(e.p,{children:"The user id."}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"hashedUserId"}),(0,t.jsx)(e.br,{}),"\n","Type: String"]}),"\n",(0,t.jsx)(e.p,{children:"The hashed user id."}),"\n",(0,t.jsx)(e.h2,{id:"notificationapiconfig",children:"NotificationApiConfig"}),"\n",(0,t.jsx)(e.p,{children:"A config object for NotificationAPI."}),"\n",(0,t.jsx)(e.h3,{id:"func-initbaseurl-string",children:"func init(baseUrl: String)"}),"\n",(0,t.jsx)(e.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"baseUrl"})," (required)",(0,t.jsx)(e.br,{}),"\n","Type: String"]}),"\n",(0,t.jsx)(e.p,{children:"The NotificationAPI API base url."})]})}function p(i={}){const{wrapper:e}={...(0,r.R)(),...i.components};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(h,{...i})}):h(i)}},8453:(i,e,n)=>{n.d(e,{R:()=>a,x:()=>s});var t=n(6540);const r={},o=t.createContext(r);function a(i){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function s(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(r):i.components||r:a(i.components),t.createElement(o.Provider,{value:e},i.children)}}}]);