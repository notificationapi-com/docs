"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[620],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),i=n(6010);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(7462),i=n(7294),r=n(6010),o=n(2466),l=n(6550),s=n(1980),p=n(7392),c=n(12);function u(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,p]=f({queryString:n,groupId:a}),[u,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=s??u;return m({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),h(e)}),[p,h,r]),tabValues:r}}var k=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=p[n].value;a!==l&&(u(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},o,{className:(0,r.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=h(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},i.createElement(b,(0,a.Z)({},e,t)),i.createElement(y,(0,a.Z)({},e,t)))}function v(e){const t=(0,k.Z)();return i.createElement(N,(0,a.Z)({key:String(t)},e))}},2619:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>m,default:()=>y,frontMatter:()=>d,metadata:()=>f,toc:()=>k});var a=n(7462),i=(n(7294),n(3905)),r=n(4866),o=n(5162),l=n(453);const s=n.p+"assets/images/inline-9e74e159870d4f902700df64eff19c7e.png",p=n.p+"assets/images/manualread-75a66557483ec6e398bdb5dee9d60001.gif",c=n.p+"assets/images/paginated-93569a1421dc37f13be095fbf2bc863b.gif";var u=n(960);const d={sidebar_position:2},m="JS Client SDK (Front-End)",f={unversionedId:"reference/js-client",id:"reference/js-client",title:"JS Client SDK (Front-End)",description:"The client-side SDK is mainly used for displaying In-App Notifications and allowing users to see and change their Notification Preferences.",source:"@site/docs/reference/js-client.md",sourceDirName:"reference",slug:"/reference/js-client",permalink:"/reference/js-client",draft:!1,editUrl:"https://github.com/notificationapi-com/docs/edit/main/docs/reference/js-client.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server SDKs (Back-end)",permalink:"/reference/server"},next:{title:"iOS SDK (Front-End)",permalink:"/reference/ios-sdk"}},h={},k=[{value:"Setup",id:"setup",level:2},{value:"Service Worker Setup (Required for Web Push)",id:"service-worker-setup-required-for-web-push",level:3},{value:"Your First Example",id:"your-first-example",level:2},{value:"Initialization",id:"initialization",level:2},{value:"getUserPreferences()",id:"getuserpreferences",level:2},{value:"patchUserPreference()",id:"patchuserpreference",level:2},{value:"showInApp()",id:"showinapp",level:2},{value:"<code>root</code> (required)",id:"root-required",level:5},{value:"<code>inline</code>",id:"inline",level:5},{value:"<code>markAsReadMode</code>",id:"markasreadmode",level:5},{value:"<code>popupPosition</code>",id:"popupposition",level:5},{value:"<code>paginated</code>",id:"paginated",level:5},{value:"<code>pageSize</code>",id:"pagesize",level:5},{value:"showUserPreferences()",id:"showuserpreferences",level:2},{value:"Secure Mode",id:"secure-mode",level:2},{value:"Framework Specific Configurations",id:"framework-specific-configurations",level:2},{value:"React.js",id:"reactjs",level:3},{value:"Vue.js",id:"vuejs",level:3},{value:"Remix",id:"remix",level:3}],g={toc:k},b="wrapper";function y(e){let{components:t,...d}=e;return(0,i.kt)(b,(0,a.Z)({},g,d,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"js-client-sdk-front-end"},"JS Client SDK (Front-End)"),(0,i.kt)("p",null,"The client-side SDK is mainly used for displaying ",(0,i.kt)("strong",{parentName:"p"},"In-App Notifications")," and allowing users to see and change their ",(0,i.kt)("strong",{parentName:"p"},"Notification Preferences"),"."),(0,i.kt)("p",null,"Supported environments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Vanilla JavaScript"),(0,i.kt)("li",{parentName:"ul"},"React"),(0,i.kt)("li",{parentName:"ul"},"Vue"),(0,i.kt)("li",{parentName:"ul"},"Angular"),(0,i.kt)("li",{parentName:"ul"},"Next"),(0,i.kt)("li",{parentName:"ul"},"Remix"),(0,i.kt)("li",{parentName:"ul"},"Most JS Frameworks, including those with server-side rendering, are supported. If you don't see your framework here, just ping us on support and we will add it to the docs!")),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)(r.Z,{groupId:"js-package-manager",defaultValue:"npm/yarn",values:[{label:"npm/yarn",value:"npm/yarn"},{label:"<script>",value:"<script>"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"npm/yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="1. Install"',title:'"1.','Install"':!0},"npm install notificationapi-js-client-sdk\nyarn add notificationapi-js-client-sdk\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="2. Import"',title:'"2.','Import"':!0},"import NotificationAPI from 'notificationapi-js-client-sdk';\nimport 'notificationapi-js-client-sdk/dist/styles.css';\n"))),(0,i.kt)(o.Z,{value:"<script>",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/notificationapi-js-client-sdk/dist/notificationapi-js-client-sdk.js"><\/script>\n<link\n  href="https://unpkg.com/notificationapi-js-client-sdk/dist/styles.css"\n  rel="stylesheet"\n/>\n')))),(0,i.kt)("h3",{id:"service-worker-setup-required-for-web-push"},"Service Worker Setup (Required for Web Push)"),(0,i.kt)("p",null,"Download ",(0,i.kt)("a",{target:"_blank",href:n(6710).Z},"this file"),' and place it in the "public" folder of your web application. For example, if you are using react, the file should go in the ',(0,i.kt)("inlineCode",{parentName:"p"},"public")," folder."),(0,i.kt)("h2",{id:"your-first-example"},"Your First Example"),(0,i.kt)("h2",{id:"initialization"},"Initialization"),(0,i.kt)("p",null,"The example below creates a NotificationAPI client that connects to our servers through a WebSocket connection from your front-end. It does not show anything yet."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Example"',title:'"Example"'},"const notificationapi = new NotificationAPI({\n  clientId: YOUR_CLIENT_ID,\n  userId: UNIQUE_USER_ID\n});\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Initializing the library more than once is safe, but will generate unnecessary resources and network calls."),(0,i.kt)("p",{parentName:"admonition"},"React users should follow the ",(0,i.kt)("a",{parentName:"p",href:"#reactjs"},"React section"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters:")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"clientId")," (required)",(0,i.kt)("br",{parentName:"p"}),"\n","Type: string"),(0,i.kt)("p",null,"Your NotificationAPI account clientId. You can get it from ",(0,i.kt)("a",{parentName:"p",href:"https://app.notificationapi.com/environments"},"here"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"userId")," (required)",(0,i.kt)("br",{parentName:"p"}),"\n","Type: string"),(0,i.kt)("p",null,"The unique ID of the user in your system."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"userIdHash"),"\nType: string"),(0,i.kt)("p",null,"Only used for ",(0,i.kt)("a",{parentName:"p",href:"#secure-mode"},"Secure Mode"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"websocket"),"\nType: string"),(0,i.kt)("p",null,"Only if you want to specify your region, for example, if your account is in Canada region you must pass 'wss://ws.ca.notificationapi.com'."),(0,i.kt)("h2",{id:"getuserpreferences"},"getUserPreferences()"),(0,i.kt)("p",null,"Allows you to access the raw data of the user's notification preferences from the front-end."),(0,i.kt)("p",null,"Please note that unless you require extreme customization, you can rely on ",(0,i.kt)("a",{parentName:"p",href:"#showuserpreferences"},"showUserPreferences()")," function to display and edit notification preferences without any additional code."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Example"',title:'"Example"'},'notificationapi.getUserPreferences().then((prefs) => {\n  console.log(prefs);\n});\n\n/* prints:\n[\n  {\n      "notificationId": "new_order",\n      "title": "New Order",\n      "settings": [\n          {\n              "channel": "SMS",\n              "state": false,\n              "channelName": "SMS"\n          },\n          {\n              "channel": "EMAIL",\n              "state": true,\n              "channelName": "Email"\n          }\n      ],\n      "subNotificationPreferences": []\n  },\n  ... more items for all notifications\n] */\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"getUserPreferences() : Promise<Preference[]>\n\ninterface Preference {\n  notificationId: string;\n  title: string; // the friendly title of the notification\n  settings: {\n    channel: string; // EMAIL, INAPP_WEB, SMS, CALL\n    channelName: string; // channel friendly name: Email, In-App, SMS, Call\n    state: boolean; // indicating the preference\n  }[];\n  subNotificationPreferences: Preference[]; // when using subNotificationIds, it will contain a similar item for each subNotificationId\n}\n")),(0,i.kt)("h2",{id:"patchuserpreference"},"patchUserPreference()"),(0,i.kt)("p",null,"Allows you to programmatically change the user's notification preferences from the front-end."),(0,i.kt)("p",null,"Please note that unless you require extreme customization, you can rely on ",(0,i.kt)("a",{parentName:"p",href:"#showuserpreferences"},"showUserPreferences()")," function to display and edit notification preferences without any additional code."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Example"',title:'"Example"'},"notificationapi.patchUserPreference('myNotificationId', 'EMAIL', false);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"notificationId")," (required)",(0,i.kt)("br",{parentName:"p"}),"\n","Type: string"),(0,i.kt)("p",null,"The ID of the notification in NotificationAPI."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"channel")," (required)",(0,i.kt)("br",{parentName:"p"}),"\n","Type: string"),(0,i.kt)("p",null,"The channel for which you wish to change the setting.",(0,i.kt)("br",{parentName:"p"}),"\n","Accepted values: ",(0,i.kt)("inlineCode",{parentName:"p"},"EMAIL"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"INAPP_WEB"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"SMS"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"CALL"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"state")," (required)",(0,i.kt)("br",{parentName:"p"}),"\n","Type: boolean"),(0,i.kt)("p",null,"The preference of the user. If set to false, the user will no longer receive the specified notification on the specified channel, until the state is set to true again through the API or the preferences popup."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"subNotificationId")," (optional)",(0,i.kt)("br",{parentName:"p"}),"\n","Type: string"),(0,i.kt)("p",null,"For setting the preference of a subNotificationId within a notification."),(0,i.kt)("h2",{id:"showinapp"},"showInApp()"),(0,i.kt)("img",{src:l.Z}),(0,i.kt)("p",null,"This function adds the in-app notifications (the bell icon along with all its functionality) to your app."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Example"',title:'"Example"'},"notificationapi.showInApp({\n  root: 'parentDivID'\n});\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters")),(0,i.kt)("h5",{id:"root-required"},(0,i.kt)("inlineCode",{parentName:"h5"},"root")," (required)"),(0,i.kt)("p",null,"Type: string"),(0,i.kt)("p",null,"The ID of the HTML element that will contain the NotificationAPI widget. Ideally an empty div."),(0,i.kt)("h5",{id:"inline"},(0,i.kt)("inlineCode",{parentName:"h5"},"inline")),(0,i.kt)("p",null,"Type: boolean"),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("p",null,"By default, the showInApp() function will display a \ud83d\udd14 button. The in-app notifications are displayed in a popup when the button is clicked. With inline set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", the in-app notifications are displayed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"root")," element without the popup."),(0,i.kt)("p",null,"Preview:"),(0,i.kt)("img",{src:s,width:"400"}),(0,i.kt)("h5",{id:"markasreadmode"},(0,i.kt)("inlineCode",{parentName:"h5"},"markAsReadMode")),(0,i.kt)("p",null,"Type: string (JS), MarkAsReadModes enum (TS)"),(0,i.kt)("p",null,"Default: AUTOMATIC"),(0,i.kt)("p",null,"By default, in-app notifications are set to read when they are displayed to the user and the unread notification count is reset to 0. Switching to the ",(0,i.kt)("inlineCode",{parentName:"p"},"MANUAL"),' mode will not set notifications to read on display. Instead, the user can set notifications to read using an overall "Mark All As Read" button, or by using the individual "Mark as read" on each notification. The ',(0,i.kt)("inlineCode",{parentName:"p"},"MANUAL_AND_CLICK")," mode works similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"MANUAL")," mode, but also sets notifications to read when user clicks the notification."),(0,i.kt)("p",null,"Valid string options: AUTOMATIC, MANUAL, MANUAL_AND_CLICK"),(0,i.kt)("p",null,"Preview:"),(0,i.kt)("img",{src:p,width:"400"}),(0,i.kt)("h5",{id:"popupposition"},(0,i.kt)("inlineCode",{parentName:"h5"},"popupPosition")),(0,i.kt)("p",null,"Type: string (JS), PopupPosition enum (TS)"),(0,i.kt)("p",null,"Default: rightBottom"),(0,i.kt)("p",null,"The position of the notifications popup relative to the button."),(0,i.kt)("p",null,"Valid string options: topLeft, topRight, bottomLeft, bottomRight, leftTop, leftBottom, rightTop, rightBottom."),(0,i.kt)("h5",{id:"paginated"},(0,i.kt)("inlineCode",{parentName:"h5"},"paginated")),(0,i.kt)("p",null,"Type: boolean"),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("p",null,"By default, the in-app notifications are displayed in endless scrolling mode. Setting this field to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," will show in-app notifications in paginated mode with controls to change pages."),(0,i.kt)("p",null,"Preview:"),(0,i.kt)("img",{src:c,width:"400"}),(0,i.kt)("h5",{id:"pagesize"},(0,i.kt)("inlineCode",{parentName:"h5"},"pageSize")),(0,i.kt)("p",null,"Type: number"),(0,i.kt)("p",null,"Default: 5"),(0,i.kt)("p",null,"The number of in-app notifications per page. Only valid for ",(0,i.kt)("inlineCode",{parentName:"p"},"paginated")," mode."),(0,i.kt)("h2",{id:"showuserpreferences"},"showUserPreferences()"),(0,i.kt)("p",null,"User preferences is accessible from the in-app popup (similar to the gif below). However, you may use this function to programmatically open the user preferences from your code."),(0,i.kt)("img",{src:u.Z}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Example"',title:'"Example"'},"notificationapi.showUserPreferences();\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"parent"),(0,i.kt)("br",{parentName:"p"}),"\n","Type: string",(0,i.kt)("br",{parentName:"p"}),"\n","Default: undefined"),(0,i.kt)("p",null,"When undefined (default behavior), the user preferences will show as a modal. Given this parameter, the user preferences will render in inline mode inside an existing HTML element on your page. You can pass the ID of the parent element to this parameter. Ideally, use an empty div for the parent."),(0,i.kt)("h2",{id:"secure-mode"},"Secure Mode"),(0,i.kt)("p",null,"Front-end code is observable and mutable by end-users. Malicious actors can take advantage of this. For example, someone can impersonate another user on your website's chat tool or NotificationAPI by passing different parameters to the library. Secure Mode makes our front-end SDK safe against this threat."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step by Step Guide")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Back-end: hash the userId using your client secret. Pass the hashed userId to your front-end. For example, from an API right after the page loads.")),(0,i.kt)(r.Z,{defaultValue:"Node.js",values:[{label:"Node.js",value:"Node.js"},{label:"Python",value:"Python"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"Node.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const hashedUserId = require('crypto') // crypto is part of nodejs\n  .createHmac('sha256', 'YOUR_CLIENT_SECRET')\n  .update('ACTUAL_USER_ID')\n  .digest('base64');\n"))),(0,i.kt)(o.Z,{value:"Python",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"import hmac\nimport hashlib\nimport base64\nhashedUserId = base64.b64encode(hmac.new( 'YOUR_CLIENT_SECRET'.encode('utf-8'),\n            'ACTUAL_USER_ID'.encode('utf-8'),\n             hashlib.sha256).digest())\n")))),"2. Front-end: pass the hashed userId to the NotificationAPI SDK:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"new NotificationAPI({\n  root: '...',\n  clientId: '...',\n  userId: 'ACTUAL_USER_ID',\n  userIdHash: 'HASHED_USER_ID'\n});\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Enable secure mode in your account settings (Settings -> Security). When our SDK starts, it sends both the userId and hashed userId to our servers and we compare the values to ensure the userId and its hash match, indicating userId has not been tampered.")),(0,i.kt)("h2",{id:"framework-specific-configurations"},"Framework Specific Configurations"),(0,i.kt)("h3",{id:"reactjs"},"React.js"),(0,i.kt)("p",null,'React\'s state management and re-rendering causes this widget to be destroyed and re-initialized with every state change. To avoid this issue, place the initialization and the root element in a "memo"-ized React component. Example:'),(0,i.kt)(r.Z,{defaultValue:"NotificationAPIComponent.js",values:[{label:"NotificationAPIComponent.js",value:"NotificationAPIComponent.js"},{label:"App.js",value:"App.js"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"NotificationAPIComponent.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import NotificationAPI from 'notificationapi-js-client-sdk';\nimport 'notificationapi-js-client-sdk/dist/styles.css';\nimport { PopupPosition } from 'notificationapi-js-client-sdk/lib/interfaces';\nimport React, { memo, useEffect, useRef } from 'react';\n\nconst NotificationAPIComponent = memo((props) => {\n  const containerRef = useRef();\n\n  useEffect(() => {\n    const notificationapi = new NotificationAPI({\n      clientId: YOUR_CLIENT_ID,\n      userId: props.userId\n    });\n    notificationapi.showInApp({\n      root: 'container',\n      popupPosition: PopupPosition.BottomLeft\n    });\n\n    // Store a reference to the container DOM element.\n    const container = containerRef.current;\n    // This effect can run multiple times due to the `userId` changing\n    // or Hot Module Replacement (HMR). Ensure the container is cleared\n    // as `showInApp` will append to the container instead of overwriting it.\n    return () => {\n      container.innerHTML = '';\n    };\n  }, [props.userId]);\n\n  return <div id=\"container\" ref={containerRef}></div>;\n});\n\nexport default NotificationAPIComponent;\n"))),(0,i.kt)(o.Z,{value:"App.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import NotificationAPIComponent from './NotificationAPIComponent';\n\nfunction App() {\n  return (\n    <div>\n      <NotificationAPIComponent userId=\"USER_ID\" />\n      <div> ... </div>\n    </div>\n  );\n}\n\nexport default App;\n")))),(0,i.kt)("h3",{id:"vuejs"},"Vue.js"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<script setup>\n  import NotificationAPI from 'notificationapi-js-client-sdk';\n  import 'notificationapi-js-client-sdk/dist/styles.css';\n  import { onMounted } from 'vue';\n  onMounted(() => {\n    const notificationapi = new NotificationAPI({\n      clientId: 'CLIENT_ID',\n      userId: 'USER_ID'\n    });\n\n    notificationapi.showInApp({\n      root: 'myNotifications'\n    });\n  });\n<\/script>\n\n<template>\n  <div>Hello World!</div>\n  <div id=\"myNotifications\"></div>\n</template>\n")),(0,i.kt)("h3",{id:"remix"},"Remix"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Add the following to your remix.config.js: ",(0,i.kt)("a",{parentName:"li",href:"https://remix.run/docs/en/1.13.0/pages/gotchas#importing-esm-packages"},"what is this?"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"serverDependenciesToBundle: ['notificationapi-js-client-sdk'];\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Add our CSS styles to your root component:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import NotificationAPICSS from "notificationapi-js-client-sdk/dist/styles.css";\n\nexport const links: LinksFunction = () => {\n  return [\n    ...,\n    { rel: "stylesheet", href: NotificationAPICSS },\n  ];\n};\n')),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Import and use our library normally, similar to React. Example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import NotificationAPIClient from 'notificationapi-js-client-sdk';\nimport { useEffect } from 'react';\n\nexport default function Index() {\n  useEffect(() => {\n    const notificationapi = new NotificationAPIClient({\n      clientId: 'CLIENT_ID',\n      userId: 'USER_ID'\n    });\n\n    notificationapi.showInApp({\n      root: 'bell-container'\n    });\n  }, []);\n\n  return (\n    <main>\n      <div id=\"bell-container\"></div>\n    </main>\n  );\n}\n")))}y.isMDXComponent=!0},6710:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/notificationapi-service-worker-0697cc83d566c337f10fdfafdd4c765b.js"},453:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/inapp-2351be43133824c90d83c71767223d44.gif"},960:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/userpref-5ebda40a7b681b452100fa75c31c9942.gif"}}]);