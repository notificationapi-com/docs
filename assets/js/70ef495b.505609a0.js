"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[126],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),p=l(n),f=i,m=p["".concat(c,".").concat(f)]||p[f]||u[f]||o;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d[p]="string"==typeof e?e:i,a[1]=d;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:4},a="Android SDK (Front-End)",d={unversionedId:"reference/android_sdk",id:"reference/android_sdk",title:"Android SDK (Front-End)",description:"The Android SDK is used to recieve push notifications and handle device token synchronization with NotificationAPI.",source:"@site/docs/reference/android_sdk.md",sourceDirName:"reference",slug:"/reference/android_sdk",permalink:"/reference/android_sdk",draft:!1,editUrl:"https://github.com/notificationapi-com/docs/edit/main/docs/reference/android_sdk.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"iOS SDK (Front-End)",permalink:"/reference/ios-sdk"}},c={},l=[{value:"Setup",id:"setup",level:2},{value:"Getting Started",id:"getting-started",level:2}],s={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"android-sdk-front-end"},"Android SDK (Front-End)"),(0,i.kt)("p",null,"The Android SDK is used to recieve ",(0,i.kt)("strong",{parentName:"p"},"push notifications")," and handle device token synchronization with NotificationAPI."),(0,i.kt)("p",null,"Supported environments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Android API 24 and above")),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("p",null,"Add the JitPack repository in your ",(0,i.kt)("inlineCode",{parentName:"p"},"build.gradle"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},"allprojects {\n    repositories {\n        ...\n        maven { url 'https://jitpack.io' }\n    }\n}\n")),(0,i.kt)("p",null,"Then add the Android SDK dependency."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},"dependencies {\n    implementation 'com.github.notificationapi:notificationapi-android-sdk:1.0.0'\n}\n")),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"Create a new service that extends from ",(0,i.kt)("inlineCode",{parentName:"p"},"NotificationApiService")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="MyService.kt"',title:'"MyService.kt"'},"class MyService: NotificationApiService() {\n\n}\n")),(0,i.kt)("p",null,"Add your service to ",(0,i.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="AndroidManifext.xml"',title:'"AndroidManifext.xml"'},'<service\n    android:name=".MyService"\n    android:exported="false">\n    <intent-filter>\n        <action android:name="com.google.firebase.MESSAGING_EVENT" />\n    </intent-filter>\n</service>\n')),(0,i.kt)("p",null,"You must configure the SDK with your ",(0,i.kt)("inlineCode",{parentName:"p"},"NotificationAPI")," credentials. It is recommended to configure the SDK as early as possible. You must also request notification authorization from the user. "),(0,i.kt)("p",null,"You are now ready to recieve push notifications from NotificationAPI! \ud83c\udf89"))}u.isMDXComponent=!0}}]);