"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[393],{3993:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>h});var t=i(4848),s=i(8453),r=i(1470),o=i(9365);const a={sidebar_position:2},l="JS Client SDK (Front-End)",c={id:"reference/js-client",title:"JS Client SDK (Front-End)",description:"The client-side SDK is mainly used for displaying In-App Notifications and allowing users to see and change their Notification Preferences.",source:"@site/docs/reference/js-client.md",sourceDirName:"reference",slug:"/reference/js-client",permalink:"/reference/js-client",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server SDKs (Back-end)",permalink:"/reference/server"},next:{title:"iOS SDK (Front-End)",permalink:"/reference/ios-sdk"}},d={},h=[{value:"Setup &amp; Initialization",id:"setup--initialization",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Framework Specific Gotcha&#39;s",id:"framework-specific-gotchas",level:2},{value:"Service Worker Setup",id:"service-worker-setup",level:2},{value:"getUserPreferences",id:"getuserpreferences",level:2},{value:"Response Example",id:"response-example",level:4},{value:"identify",id:"identify",level:2},{value:"patchUserPreference",id:"patchuserpreference",level:2},{value:"showInApp",id:"showinapp",level:2},{value:"Parameters",id:"parameters-1",level:4},{value:"showUserPreferences",id:"showuserpreferences",level:2},{value:"Parameters",id:"parameters-2",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Frequently Asked Questions (FAQ)",id:"frequently-asked-questions-faq",level:2},{value:"Why Can I Not Send Notifications from a Front-end SDK?",id:"why-can-i-not-send-notifications-from-a-front-end-sdk",level:3}];function u(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"js-client-sdk-front-end",children:"JS Client SDK (Front-End)"}),"\n",(0,t.jsxs)(n.p,{children:["The client-side SDK is mainly used for displaying ",(0,t.jsx)(n.strong,{children:"In-App Notifications"})," and allowing users to see and change their ",(0,t.jsx)(n.strong,{children:"Notification Preferences"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Supported environments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Vanilla JavaScript"}),"\n",(0,t.jsx)(n.li,{children:"React"}),"\n",(0,t.jsx)(n.li,{children:"Vue"}),"\n",(0,t.jsx)(n.li,{children:"Angular"}),"\n",(0,t.jsx)(n.li,{children:"Next"}),"\n",(0,t.jsx)(n.li,{children:"Remix"}),"\n",(0,t.jsx)(n.li,{children:"Most JS Frameworks, including those with server-side rendering, are supported. If you don't see your framework here, just ping us on support and we will add it to the docs!"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"setup--initialization",children:"Setup & Initialization"}),"\n","\n","\n",(0,t.jsxs)(r.A,{groupId:"package-manager",defaultValue:"manager",values:[{label:"Package Manager",value:"manager"},{label:"UMD",value:"umd"}],children:[(0,t.jsxs)(o.A,{value:"manager",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",metastring:'title="1. Install"',children:"npm install notificationapi-js-client-sdk\n# yarn add notificationapi-js-client-sdk\n# pnpm add notificationapi-js-client-sdk\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="2. Import"',children:"import NotificationAPI from 'notificationapi-js-client-sdk';\nimport 'notificationapi-js-client-sdk/dist/styles.css';\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="3. Initialize"',children:"const notificationapi = new NotificationAPI({\n  clientId: 'YOUR_CLIENT_ID',\n  userId: 'UNIQUE_USER_ID'\n});\n"})})]}),(0,t.jsxs)(o.A,{value:"umd",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",metastring:'title="1. Add to HTML, before </head>"',children:'<script src="https://unpkg.com/notificationapi-js-client-sdk@4.4.0/dist/notificationapi-js-client-sdk.js"><\/script>\n<link\n  href="https://unpkg.com/notificationapi-js-client-sdk/dist/styles.css"\n  rel="stylesheet"\n/>\n'})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="2. Initialize"',children:"const notificationapi = new NotificationAPI({\n  clientId: YOUR_CLIENT_ID,\n  userId: UNIQUE_USER_ID\n});\n"})})]})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"clientId*"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"userId*"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The unique ID of the user in your system."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"userIdHash"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Only used for ",(0,t.jsx)(n.a,{href:"#secure-mode",children:"Secure Mode"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"websocket"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Only if you want to specify your region, for example, if your account is in Canada region you must pass 'wss://ws.ca.notificationapi.com'."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"framework-specific-gotchas",children:"Framework Specific Gotcha's"}),"\n",(0,t.jsxs)(r.A,{groupId:"frontend-language",defaultValue:"react",values:[{label:"React",value:"react"},{label:"Remix",value:"remix"},{label:"Vue",value:"vue"},{label:"Nuxt3",value:"nuxt3"},{label:"Angular",value:"angular"},{label:"Next.js",value:"next"}],children:[(0,t.jsxs)(o.A,{value:"react",children:[(0,t.jsxs)(n.p,{children:["To prevent unncessary rerenders and reinitialization of the SDK, use the ",(0,t.jsx)(n.code,{children:"memo"})," function:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import NotificationAPI from 'notificationapi-js-client-sdk';\nimport 'notificationapi-js-client-sdk/dist/styles.css';\nimport { PopupPosition } from 'notificationapi-js-client-sdk/lib/interfaces';\nimport { memo, useEffect } from 'react';\n\nconst NotificationAPIContainer = memo((props) => {\n  useEffect(() => {\n    const notificationapi = new NotificationAPI({\n      clientId: 'CLIENT_ID',\n      userId: props.userId\n    });\n    notificationapi.showInApp({\n      root: 'CONTAINER_DIV_ID',\n      popupPosition: PopupPosition.BottomLeft\n    });\n  }, [props.userId]);\n\n  return <div id=\"CONTAINER_DIV_ID\"></div>;\n});\nexport default NotificationAPIContainer;\n"})})]}),(0,t.jsxs)(o.A,{value:"next",children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"'user client'"})," is necessary to ensure that the code is executed on the client side. Also, to prevent unncessary rerenders and reinitialization of the SDK, use the ",(0,t.jsx)(n.code,{children:"memo"})," function."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"'use client';\n\nimport 'notificationapi-js-client-sdk/dist/styles.css';\nimport { memo, useEffect } from 'react';\nconst NotificationAPIComponent = memo(() => {\n  useEffect(() => {\n    const loadNotificationAPI = async () => {\n      const NotificationAPI = (await import('notificationapi-js-client-sdk'))\n        .default;\n      const notificationapi = new NotificationAPI({\n        clientId: 'CLIENT_ID',\n        userId: 'USERS_ID'\n      });\n      notificationapi.showInApp({\n        root: 'CONTAINER_DIV_ID'\n      });\n    };\n\n    loadNotificationAPI();\n  }, []);\n\n  return <div id=\"CONTAINER_DIV_ID\"></div>;\n});\n\nNotificationAPIComponent.displayName = 'NotificationAPIComponent';\n\nexport default NotificationAPIComponent;\n"})})]}),(0,t.jsxs)(o.A,{value:"remix",children:[(0,t.jsx)(n.p,{children:"a) Add the following to your remix.config.js:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"serverDependenciesToBundle: ['notificationapi-js-client-sdk'];\n\n// for more info, read: https://remix.run/docs/en/main/guides/gotchas#importing-esm-packages\n"})}),(0,t.jsx)(n.p,{children:"b) Add our CSS styles to your root component:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import NotificationAPICSS from 'notificationapi-js-client-sdk/dist/styles.css';\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: 'stylesheet', href: NotificationAPICSS }\n    // and the other links ...\n  ];\n};\n"})}),(0,t.jsx)(n.p,{children:"c) Import and use our library:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import NotificationAPIClient from 'notificationapi-js-client-sdk';\nimport { useEffect } from 'react';\n\nexport default function Index() {\n  useEffect(() => {\n    const notificationapi = new NotificationAPIClient({\n      clientId: 'CLIENT_ID',\n      userId: 'USER_ID'\n    });\n\n    notificationapi.showInApp({\n      root: 'bell-container'\n    });\n  }, []);\n\n  return (\n    <main>\n      <div id=\"bell-container\"></div>\n    </main>\n  );\n}\n"})})]}),(0,t.jsx)(o.A,{value:"vue",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"<script setup>\n  import NotificationAPI from 'notificationapi-js-client-sdk';\n  import 'notificationapi-js-client-sdk/dist/styles.css';\n  import { onMounted } from 'vue';\n  onMounted(() => {\n    const notificationapi = new NotificationAPI({\n      clientId: 'CLIENT_ID',\n      userId: 'USER_ID'\n    });\n\n    notificationapi.showInApp({\n      root: 'myNotifications'\n    });\n  });\n<\/script>\n\n<template>\n  <div>Hello World!</div>\n  <div id=\"myNotifications\"></div>\n</template>\n"})})}),(0,t.jsx)(o.A,{value:"nuxt3",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"<template>\n  <div ref=\"containerRef\" id=\"container\"></div>\n</template>\n\n<script>\n  import NotificationAPI from 'notificationapi-js-client-sdk';\n  import { PopupPosition } from 'notificationapi-js-client-sdk/lib/interfaces';\n  import 'notificationapi-js-client-sdk/dist/styles.css';\n  export default {\n    name: 'NotificationAPIComponent',\n    mounted() {\n      this.notificationapi = new NotificationAPI({\n        clientId: 'CLIENT_ID',\n        userId: 'USER_ID'\n      });\n\n      this.notificationapi.showInApp({\n        root: 'container', // Use the ref as the root element\n        popupPosition: PopupPosition.BottomRight\n      });\n    }\n  };\n<\/script>\n<style scoped>\n  #container {\n    text-align: center;\n  }\n</style>\n"})})}),(0,t.jsxs)(o.A,{value:"angular",children:[(0,t.jsx)(n.p,{children:"a) Add our CSS to your styles.scss file:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"@import 'node_modules/notificationapi-js-client-sdk/dist/styles.css'\n"})}),(0,t.jsx)(n.p,{children:"b) Import and use our library:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import NotificationAPI from 'notificationapi-js-client-sdk';\nimport {PopupPosition} from 'notificationapi-js-client-sdk/lib/interfaces';\n\nngOnInit() {\n  const notificationapi = new NotificationAPI({\n      userId: \"USERS_ID\",\n      clientId: \"CLIENT_ID\",\n    });\n  notificationapi.showInApp({\n    root: 'bell-container', // root element containing the button\n    popupPosition: PopupPosition.BottomLeft\n  });\n}\n\n// This goes inside the template\n<div id=\"bell-container\"></div>\n"})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"service-worker-setup",children:"Service Worker Setup"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Only required for Web Push notifications:"})}),"\n",(0,t.jsxs)(n.p,{children:["Download ",(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(3896).A+"",children:"this file"}),' and place it in the "public" folder of your web application. For example, if you are using react, the file should go in the ',(0,t.jsx)(n.code,{children:"public"})," folder."]}),"\n",(0,t.jsx)(n.h2,{id:"getuserpreferences",children:"getUserPreferences"}),"\n",(0,t.jsx)(n.p,{children:"Returns the user's notification preferences."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.getUserPreferences().then((prefs) => {\n  console.log(prefs);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"response-example",children:"Response Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "notificationId": "new_order",\n    "title": "New Order",\n    "settings": [\n      {\n        "channel": "SMS",\n        "state": false,\n        "channelName": "SMS"\n      },\n      {\n        "channel": "EMAIL",\n        "state": true,\n        "channelName": "Email"\n      }\n    ]\n  }\n]\n'})}),"\n",(0,t.jsx)(n.h2,{id:"identify",children:"identify"}),"\n",(0,t.jsx)(n.p,{children:"Stores the end-user information for a given user."}),"\n",(0,t.jsxs)(n.p,{children:["By using this function, you can omit the contact information when using ",(0,t.jsx)(n.code,{children:"send()"}),". NotificationAPI will automatically lookup the user's stored email or phone number and use it for sending the notification. Recommended to call ",(0,t.jsx)(n.code,{children:"identify()"})," every time the user signs, or upon signup and changing of the user contact info."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.identify({\n  id: 'testId',\n  email: 'spongebob@squarepants.com'\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"patchuserpreference",children:"patchUserPreference"}),"\n",(0,t.jsx)(n.p,{children:"Allows you update the user's notification preferences."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.patchUserPreference('order_tracking', 'EMAIL', false);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"notificationId*"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the notification in NotificationAPI."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"channel*"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["The channel for which you wish to change the setting. Accepted values: ",(0,t.jsx)("br",{}),(0,t.jsx)(n.code,{children:"EMAIL"}),", ",(0,t.jsx)(n.code,{children:"INAPP_WEB"}),", ",(0,t.jsx)(n.code,{children:"SMS"}),", ",(0,t.jsx)(n.code,{children:"CALL"}),", ",(0,t.jsx)(n.code,{children:"PUSH"}),", ",(0,t.jsx)(n.code,{children:"WEB_PUSH"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"state*"}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:"The preference of the user. If set to false, the user will no longer receive the specified notification on the specified channel, until the state is set to true again through the API or the preferences popup."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"subNotificationId"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Only when using ",(0,t.jsx)(n.a,{href:"../features/subnotifications",children:"subNotificationIds"})]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"showinapp",children:"showInApp"}),"\n",(0,t.jsx)(n.p,{children:"This function renders the in-app notifications widget on your front-end."}),"\n",(0,t.jsxs)(n.p,{children:["Complete guide: ",(0,t.jsx)(n.a,{href:"../components/inapp",children:"In-App Notifications Widget"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.showInApp({\n  root: 'CONTAINER_DIV_ID'\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"root*"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the HTML element that will contain the in-app widget. Ideally an empty div."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"inline"}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsxs)(n.td,{children:["Default: false. By default, the showInApp() function will display a \ud83d\udd14 button. The in-app notifications are displayed in a popup when the button is clicked. With inline set to ",(0,t.jsx)(n.code,{children:"true"}),", the in-app notifications are displayed in the ",(0,t.jsx)(n.code,{children:"root"})," element without the popup."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"markAsReadMode"}),(0,t.jsx)(n.td,{children:"string (JS), MarkAsReadModes enum (TS)"}),(0,t.jsxs)(n.td,{children:["Default: AUTOMATIC. In AUTOMATIC mode, in-app notifications are set to read when they are displayed to the user and the unread notification count is reset to 0. Switching to the ",(0,t.jsx)(n.code,{children:"MANUAL"}),' mode will not set notifications to read on display. Instead, the user can set notifications to read using an overall "Mark All As Read" button, or by using the individual "Mark as read" on each notification. The ',(0,t.jsx)(n.code,{children:"MANUAL_AND_CLICK"})," mode works similar to ",(0,t.jsx)(n.code,{children:"MANUAL"})," mode, but also sets notifications to read when user clicks the notification. Valid string options: AUTOMATIC, MANUAL, MANUAL_AND_CLICK"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"popupPosition"}),(0,t.jsx)(n.td,{children:"string (JS), PopupPosition enum (TS)"}),(0,t.jsx)(n.td,{children:"Default: rightBottom. The position of the notifications popup relative to the button."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"paginated"}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsxs)(n.td,{children:["Default: false. By default, the in-app notifications are displayed in endless scrolling mode. Setting this field to ",(0,t.jsx)(n.code,{children:"true"})," will show in-app notifications in paginated mode with controls to change pages."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"pageSize"}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsxs)(n.td,{children:["Default: 5. The number of in-app notifications per page. Only valid for ",(0,t.jsx)(n.code,{children:"paginated"})," mode."]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"showuserpreferences",children:"showUserPreferences"}),"\n",(0,t.jsx)(n.p,{children:"This function renders the user preferences widget on your front-end."}),"\n",(0,t.jsxs)(n.p,{children:["Complete guide: ",(0,t.jsx)(n.a,{href:"../components/user-preferences",children:"User Preferences Widget"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.showUserPreferences();\n"})}),"\n",(0,t.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"parent"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"When undefined (default behavior), the user preferences will show as a modal. Given this parameter, the user preferences will render in inline mode inside an existing HTML element on your page. You can pass the ID of the parent element to this parameter. Ideally, use an empty div for the parent."})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"id*"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The unique ID of the user in your system."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"email"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The email of the user."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"phone"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The phone number of the user. Expected format: +15554443333."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"frequently-asked-questions-faq",children:"Frequently Asked Questions (FAQ)"}),"\n",(0,t.jsx)(n.h3,{id:"why-can-i-not-send-notifications-from-a-front-end-sdk",children:"Why Can I Not Send Notifications from a Front-end SDK?"}),"\n",(0,t.jsxs)(n.p,{children:["NotificationAPI back-end SDKs require your ",(0,t.jsx)(n.code,{children:"clientId"})," and ",(0,t.jsx)(n.code,{children:"clientSecret"})," keys that are unique to your account. If anyone else obtained your keys then they would be able to edit or delete your notifications, and be able to send requests to NotificationAPI from your account. This is a security risk to you and your clients."]}),"\n",(0,t.jsxs)(n.p,{children:["To better protect you, the NotificationAPI front-end SDKs do not allow ",(0,t.jsx)(n.em,{children:"sending"})," notifications: they only allow ",(0,t.jsx)(n.em,{children:"receiving"})," notifications. If you require sending notifications from your front-end, it is recommended to use a NotificationAPI back-end SDK on your back-end and expose an API for your front-end."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},9365:(e,n,i)=>{i.d(n,{A:()=>o});i(6540);var t=i(4164);const s={tabItem:"tabItem_Ymn6"};var r=i(4848);function o(e){let{children:n,hidden:i,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,o),hidden:i,children:n})}},1470:(e,n,i)=>{i.d(n,{A:()=>b});var t=i(6540),s=i(4164),r=i(3104),o=i(6347),a=i(205),l=i(7485),c=i(1682),d=i(9466);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:s}}=e;return{value:n,label:i,attributes:t,default:s}}))}(i);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:i}=e;const s=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,l.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function j(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,r=u(e),[o,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[c,h]=f({queryString:i,groupId:s}),[j,x]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,d.Dv)(i);return[s,(0,t.useCallback)((e=>{i&&r.set(e)}),[i,r])]}({groupId:s}),m=(()=>{const e=c??j;return p({value:e,tabValues:r})?e:null})();(0,a.A)((()=>{m&&l(m)}),[m]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,r]),tabValues:r}}var x=i(2303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=i(4848);function I(e){let{className:n,block:i,selectedValue:t,selectValue:o,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,i=l.indexOf(n),s=a[i].value;s!==t&&(c(n),o(s))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":i},n),children:a.map((e=>{let{value:n,label:i,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:h,onClick:d,...r,className:(0,s.A)("tabs__item",m.tabItem,r?.className,{"tabs__item--active":t===n}),children:i??n},n)}))})}function y(e){let{lazy:n,children:i,selectedValue:s}=e;const r=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function v(e){const n=j(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",m.tabList),children:[(0,g.jsx)(I,{...e,...n}),(0,g.jsx)(y,{...e,...n})]})}function b(e){const n=(0,x.A)();return(0,g.jsx)(v,{...e,children:h(e.children)},String(n))}},3896:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/files/notificationapi-service-worker-0697cc83d566c337f10fdfafdd4c765b.js"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);