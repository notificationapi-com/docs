"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[273],{8701:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>m,contentTitle:()=>f,default:()=>v,frontMatter:()=>p,metadata:()=>g,toc:()=>b});var t=i(4848),s=i(8453),r=(i(6540),i(1470)),o=i(9365),d=i(3253),c=i(8398),l=i(1869),a=i(2021),h=i(6132),x=i(8478);i.p,i.p,i.p;const j=i.p+"assets/images/notipreferences-8054c5a8c61f5a79f45262c4b0b1cea5.png",u=(i.p,i.p+"assets/images/elementcounter-f9c234a03681421a3d6c73a4da7b7ef1.png"),p={sidebar_position:2},f="React SDK (Front-End)",g={id:"reference/react-sdk",title:"React SDK (Front-End)",description:"The React SDK is mainly used for displaying In-App Notifications and allowing users to see and change their Notification Preferences.",source:"@site/docs/reference/react-sdk.md",sourceDirName:"reference",slug:"/reference/react-sdk",permalink:"/reference/react-sdk",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server SDKs (Back-end)",permalink:"/reference/server"},next:{title:"Vanilla JS (Front-End)",permalink:"/reference/js-client"}},m={},b=[{value:"Setup",id:"setup",level:2},{value:"Customizing the region",id:"customizing-the-region",level:3},{value:"Customizing the default sound",id:"customizing-the-default-sound",level:3},{value:"Customizing the path to web push service worker",id:"customizing-the-path-to-web-push-service-worker",level:3},{value:"Customizing the web push opt in message",id:"customizing-the-web-push-opt-in-message",level:3},{value:"In-App Notification Components",id:"in-app-notification-components",level:2},{value:"Popup",id:"popup",level:3},{value:"Popup Launcher",id:"popup-launcher",level:3},{value:"Counter (Standalone)",id:"counter-standalone",level:3},{value:"Counter (on existing elements)",id:"counter-on-existing-elements",level:3},{value:"Feed",id:"feed",level:3},{value:"Notification Preferences Center",id:"notification-preferences-center",level:2},{value:"Preferences Popup",id:"preferences-popup",level:3},{value:"Preferences Inline",id:"preferences-inline",level:3},{value:"UI Customizations",id:"ui-customizations",level:2},{value:"Customizing the Button",id:"customizing-the-button",level:3},{value:"Customizing the Button (Launcher)",id:"customizing-the-button-launcher",level:3},{value:"Customizing the Header",id:"customizing-the-header",level:3},{value:"Customizing the Popup",id:"customizing-the-popup",level:3},{value:"Customizing the Feed",id:"customizing-the-feed",level:3},{value:"Unread Badge",id:"unread-badge",level:3},{value:"Pagination",id:"pagination",level:3},{value:"Logical Customizations",id:"logical-customizations",level:2},{value:"Count",id:"count",level:3},{value:"Filters",id:"filters",level:2},{value:"Customizing each Notification",id:"customizing-each-notification",level:2},{value:"Headless (build your own UI)",id:"headless-build-your-own-ui",level:2},{value:"Setup",id:"setup-1",level:3},{value:"Accessing notification data",id:"accessing-notification-data",level:3},{value:"Accessing user preferences",id:"accessing-user-preferences",level:3},{value:"Updating user preferences",id:"updating-user-preferences",level:3},{value:"Marking loaded notifications as opened/seen",id:"marking-loaded-notifications-as-openedseen",level:3},{value:"Marking notifications as archived",id:"marking-notifications-as-archived",level:3},{value:"Marking a notification as clicked",id:"marking-a-notification-as-clicked",level:3},{value:"asking for web push opt in",id:"asking-for-web-push-opt-in",level:2},{value:"Concepts",id:"concepts",level:2},{value:"How does it work?",id:"how-does-it-work",level:3},{value:"Websocket",id:"websocket",level:3},{value:"In-App Notification Object",id:"in-app-notification-object",level:3},{value:"identify",id:"identify",level:2}];function y(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"react-sdk-front-end",children:"React SDK (Front-End)"})}),"\n",(0,t.jsxs)(n.p,{children:["The React SDK is mainly used for displaying ",(0,t.jsx)(n.strong,{children:"In-App"})," Notifications and allowing users to see and change their ",(0,t.jsx)(n.strong,{children:"Notification Preferences"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)("div",{children:[(0,t.jsx)(r.A,{groupId:"package-manager",defaultValue:"manager",values:[{label:"Package Manager",value:"manager"}],children:(0,t.jsxs)(o.A,{value:"manager",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install the react package using one of the following package managers:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npm install @notificationapi/react --legacy-peer-deps\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yarn add @notificationapi/react\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"pnpm add @notificationapi/react\n"})}),(0,t.jsxs)(n.p,{children:["If you experience a React version conflict during package installation, try adding ",(0,t.jsx)(n.code,{children:"--force"})," or ",(0,t.jsx)(n.code,{children:"--legacy-peer-deps"})," to the end of your install command."]}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Import and use our provider in your top-level components/routers:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="App.tsx"',children:'import { NotificationAPIProvider } from \'@notificationapi/react\';\n\n<App>\n  <NotificationAPIProvider\n    clientId="abc123" // your clientId found on the dashboard\n    userId="abcd-1234" // logged in userId\n    // or use this instead\n    // user={{\n    //   id:  "abcd-1234", // logged in userId\n    // }}\n    playSoundOnNewNotification={true} // Allow the user to hear default sound on new notification\n  >\n\n    \x3c!-- your protected routes --\x3e\n\n  </NotificationAPIProvider>\n</App>;\n'})}),(0,t.jsx)(n.h3,{id:"customizing-the-region",children:"Customizing the region"}),(0,t.jsx)(n.p,{children:"Change the default region to be used for your notifications from the default US:"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Or use the direct URL strings:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'import { NotificationAPIProvider } from \'@notificationapi/react\';\n\n<NotificationAPIProvider\n  clientId="abc123"\n  userId="abcd-1234"\n  apiURL="api.eu.notificationapi.com"\n  wsURL="ws.eu.notificationapi.com"\n>\n  {/* your protected routes */}\n</NotificationAPIProvider>;\n'})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"apiURL"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsxs)(n.td,{children:["Use URL string:",(0,t.jsx)("br",{}),"\u2022 ",(0,t.jsx)(n.code,{children:"api.notificationapi.com"}),(0,t.jsx)("br",{}),"\u2022 ",(0,t.jsx)(n.code,{children:"api.ca.notificationapi.com"}),(0,t.jsx)("br",{}),"\u2022 ",(0,t.jsx)(n.code,{children:"api.eu.notificationapi.com"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"wsURL"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsxs)(n.td,{children:["Use URL string:",(0,t.jsx)("br",{}),"\u2022 ",(0,t.jsx)(n.code,{children:"ws.notificationapi.com"}),(0,t.jsx)("br",{}),"\u2022 ",(0,t.jsx)(n.code,{children:"ws.ca.notificationapi.com"}),(0,t.jsx)("br",{}),"\u2022 ",(0,t.jsx)(n.code,{children:"ws.eu.notificationapi.com"})]})]})]})]}),(0,t.jsx)(n.h3,{id:"customizing-the-default-sound",children:"Customizing the default sound"}),(0,t.jsx)(n.p,{children:"Change the deafult notification sound to include your own:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"playSoundOnNewNotification"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Determines to enable / disable sound. Default is off"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"newNotificationSoundPath"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Determines the path for the new notification sound."})]})]})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<App>\n  <NotificationAPIProvider\n    userId="abcd-1234" // logged in userId\n    clientId="abc123" // your clientId found on the dashboard\n    playSoundOnNewNotification={true} // Allow the user to hear default sound on new notification\n    newNotificationSoundPath="https://path-to-your-sound.mp3"\n  >\n\n    \x3c!-- your protected routes --\x3e\n\n  </NotificationAPIProvider>\n</App>;\n'})})]})}),(0,t.jsx)(n.h3,{id:"customizing-the-path-to-web-push-service-worker",children:"Customizing the path to web push service worker"}),(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)("a",{href:"/notificationapi-service-worker.js",download:!0,children:"service worker"})," must be placed in the public folder."]}),(0,t.jsxs)(n.p,{children:["By default we assume the service worker file is publicly associable at ",(0,t.jsx)(n.code,{children:"https://yourdomain.com/notificationapi-service-worker.js"})]}),(0,t.jsx)(n.p,{children:"If the default path is not suitable for your application, you can customize the path to the web push service worker."}),(0,t.jsxs)(n.p,{children:["For example, the web push service worker is placed at ",(0,t.jsx)(n.code,{children:"public/service"})," folder and is accessible at ",(0,t.jsx)(n.code,{children:"https://yourdomain.com/service/notificationapi-service-worker.js"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<App>\n  <NotificationAPIProvider\n    userId="abcd-1234" // logged in userId\n    clientId="abc123" // your clientId found on the dashboard\n    customServiceWorkerPath="/service/notificationapi-service-worker.js"\n  >\n\n    \x3c!-- your protected routes --\x3e\n\n  </NotificationAPIProvider>\n</App>;\n'})}),(0,t.jsx)(n.h3,{id:"customizing-the-web-push-opt-in-message",children:"Customizing the web push opt in message"}),(0,t.jsx)(n.p,{children:"By default we automatically figure out if your user should see the web push opt in message or not. You can customizing it like the following:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<App>\n  <NotificationAPIProvider\n    userId="abcd-1234" // logged in userId\n    clientId="abc123" // your clientId found on the dashboard\n    webPushOptInMessage={false}\n  >\n\n    \x3c!-- your protected routes --\x3e\n\n  </NotificationAPIProvider>\n</App>;\n'})}),(0,t.jsx)(n.h2,{id:"in-app-notification-components",children:"In-App Notification Components"}),(0,t.jsx)(n.h3,{id:"popup",children:"Popup"}),(0,t.jsx)("span",{children:"Click this \ud83d\udc49"}),(0,t.jsx)(x.A,{children:()=>(0,t.jsx)(d.F,{userId:"djkean7@gmail.com",clientId:"6ok6imq9ucn2budgiebjdaa6oi",children:(0,t.jsx)(c.e,{})})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationPopup />\n"})}),(0,t.jsx)(n.p,{children:"Our popup component opens up to display your inbox for in-app notifications. This gives users a small interface for accessing their notifications without taking up screen space. Especially useful for mobile apps."}),(0,t.jsx)(n.p,{children:'All notifications are displayed here, and each notification comes with buttons to mark notifications as "seen" or "archived".\nAdditionally, the top right of the inbox contains features for setting user preferences and marking all notifications as read directlyfrom the inbox. If a notification has redirect, interacting with it will send users to that link or page from within the component.'}),(0,t.jsx)(n.h3,{id:"popup-launcher",children:"Popup Launcher"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationLauncher />\n"})}),(0,t.jsx)(n.p,{children:"The popup launcher adds a button to the corner of the page (similar to chat buttons), that remains in place on your application. This gives users access to their inbox from anywhere on a page, so they don't need to scroll up to an inbox, or visit a dedicated inbox page to read and interact with notifications."}),(0,t.jsx)(n.h3,{id:"counter-standalone",children:"Counter (Standalone)"}),(0,t.jsx)("span",{children:"This is the counter \ud83d\udc49 "}),(0,t.jsx)(x.A,{children:()=>(0,t.jsx)(d.F,{userId:"djkean7@gmail.com",clientId:"6ok6imq9ucn2budgiebjdaa6oi",children:(0,t.jsx)(l.Y,{count:"COUNT_UNARCHIVED_NOTIFICATIONS"})})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationCounter />\n"})}),(0,t.jsx)(n.p,{children:"The counter element displays the number of unread notifications. Features:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Can count "unopened/unseen" notifications or "unarchived" notifications'}),"\n",(0,t.jsx)(n.li,{children:"Can be a dot like:"}),"\n"]}),(0,t.jsx)(x.A,{children:()=>(0,t.jsx)(d.F,{userId:"djkean7@gmail.com",clientId:"6ok6imq9ucn2budgiebjdaa6oi",children:(0,t.jsx)(l.Y,{count:"COUNT_UNARCHIVED_NOTIFICATIONS",dot:!0})})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Many other formatting and positioning customizations available"}),"\n"]}),(0,t.jsx)(n.h3,{id:"counter-on-existing-elements",children:"Counter (on existing elements)"}),(0,t.jsx)(n.p,{children:"Apply the same counter badge on an existing element to notify users of unread messages."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationCounter>\n  <Button>Counter</Button>\n</NotificationCounter>\n"})}),(0,t.jsx)("img",{src:u,style:{maxWidth:300,borderRadius:8,marginBottom:20}}),(0,t.jsx)(n.h3,{id:"feed",children:"Feed"}),(0,t.jsx)(n.p,{children:"The feed component provides a larger feed for browsing notifications. Notifications within the feed can also be clicked on to direct to links or pages, if any were set within the Notification template."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationFeed infiniteScrollHeight={300} />\n"})}),(0,t.jsx)(n.p,{children:"Example:"}),(0,t.jsx)(x.A,{children:()=>(0,t.jsx)(d.F,{userId:"djkean7@gmail.com",clientId:"6ok6imq9ucn2budgiebjdaa6oi",children:(0,t.jsx)(a.Y,{infiniteScrollHeight:300,style:{borderRadius:8}})})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),(0,t.jsx)(n.h2,{id:"notification-preferences-center",children:"Notification Preferences Center"}),(0,t.jsx)(n.h3,{id:"preferences-popup",children:"Preferences Popup"}),(0,t.jsx)(n.p,{children:"Our notification preferences popup allows users to set their preferences with your app. The component contains all your templates, and sliders for users to opt-in and out of notifications, and per channel where applicable."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"const [preferencesPopupVisibility, setPreferencesPopupVisiblity] = React.useState(false);\n<button onClick={() => setPreferencesPopupVisiblity(true)}>\n  Preferences Popup\n</button>\n<NotificationPreferencesPopup\n  open={preferencesPopupVisibility}\n  onClose={() => {\n    setPreferencesPopupVisiblity(false);\n  }}\n/>\n"})}),(0,t.jsx)("img",{src:j,style:{maxWidth:600,borderRadius:8,width:"100%"}}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),(0,t.jsx)(n.h3,{id:"preferences-inline",children:"Preferences Inline"}),(0,t.jsx)(n.p,{children:"Alternatively, we also offer an inline component for user preferences. Ideal for options & settings pages."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationPreferencesInline />\n"})}),(0,t.jsx)(n.p,{children:"Example:"}),(0,t.jsx)(x.A,{children:()=>(0,t.jsx)(d.F,{userId:"djkean7@gmail.com",clientId:"6ok6imq9ucn2budgiebjdaa6oi",children:(0,t.jsx)(h.z,{})})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),(0,t.jsx)(n.h2,{id:"ui-customizations",children:"UI Customizations"}),(0,t.jsx)(n.h3,{id:"customizing-the-button",children:"Customizing the Button"}),(0,t.jsx)(n.p,{children:"Make our button fit in - or stand out. You can customize our button using the following parameters:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"buttonIconSize"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Determines the size of the icon used for the button."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"buttonHeight"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Determines the height of the button."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"buttonWidth"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Determines the width of the button."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"iconColor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Determines the color of the icon used for the button."})]})]})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationPopup buttonIconSize={30} buttonHeight={50} buttonWidth={50} />\n"})}),(0,t.jsx)(n.h3,{id:"customizing-the-button-launcher",children:"Customizing the Button (Launcher)"}),(0,t.jsx)(n.p,{children:"The launcher component takes additional parameters, allowing you to better position the button on your app."}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"offsetX"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"number"})," or ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"Determine a horizontal offset for your popup launcher."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"offsetY"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"number"})," or ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"Determine a vertical offset for your popup launcher."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"position"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:"TOP_LEFT"}),", ",(0,t.jsx)(n.code,{children:"TOP_RIGHT"}),", ",(0,t.jsx)(n.code,{children:"BOTTOM_LEFT"}),", ",(0,t.jsx)(n.code,{children:"BOTTOM_RIGHT"})]}),(0,t.jsx)(n.td,{children:"Determine which corner you want the popup launcher to anchor on."})]})]})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationLauncher buttonIconSize={30} offsetX={200} offsetY={100} />\n"})}),(0,t.jsx)(n.h3,{id:"customizing-the-header",children:"Customizing the Header"}),(0,t.jsx)(n.p,{children:'You can change the header of your notifications to take your own custom React Component. You can modify the "Notifications" header found in the popup, feed, and launcher.'}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<NotificationPopup\n  header={{\n    title: <>"Notification"</>\n  }}\n/>\n'})}),(0,t.jsx)(n.h3,{id:"customizing-the-popup",children:"Customizing the Popup"}),(0,t.jsx)(n.p,{children:"Customize out popup to be the right fit for your app. Our Popup can be customized using these parameters:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"count"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:'ReactNode["count"]'})}),(0,t.jsxs)(n.td,{children:["Modify the appearance of the count on your popup. Behaves similarly to the ",(0,t.jsx)(n.a,{href:"/reference/react-sdk#counter-standalone",children:"Counter"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"filter"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:"ALL"}),", ",(0,t.jsx)(n.code,{children:"UNARCHIVED"})]}),(0,t.jsxs)(n.td,{children:["Filter which notifications appear. Set to ",(0,t.jsx)(n.code,{children:"ALL"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"imageShape"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:"circle"}),", ",(0,t.jsx)(n.code,{children:"square"})]}),(0,t.jsxs)(n.td,{children:["Determines the shape of images in the popup feed. Set to ",(0,t.jsx)(n.code,{children:"circle"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pagePosition"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:"top"}),", ",(0,t.jsx)(n.code,{children:"bottom"})]}),(0,t.jsxs)(n.td,{children:["Determines whether the popup will render page buttons at the top or bottom of the component. Set to ",(0,t.jsx)(n.code,{children:"top"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pageSize"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsxs)(n.td,{children:["Requires ",(0,t.jsx)(n.code,{children:"pagination"})," set to ",(0,t.jsx)(n.code,{children:"PAGINATED"}),". Determines the amount of notifications shown per page."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pagination"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:"INFINITE_SCROLL"}),",",(0,t.jsx)(n.code,{children:"PAGINATED"})]}),(0,t.jsxs)(n.td,{children:["Choose between a single page or multiple pages for your inbox. Set to ",(0,t.jsx)(n.code,{children:"INFINITE_SCROLL"})," by default"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"renderers"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"object"}),": ",(0,t.jsx)(n.code,{children:'{notification: NotificationProps["renderer"], NotificationExtra["extraRenderer"]'})]}),(0,t.jsx)(n.td,{children:"Allows you to render custom & additional content."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"unreadBadgeProps"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"UnreadBadgeProps "})}),(0,t.jsxs)(n.td,{children:["Modify the unread badge. Behaves similarly to the ",(0,t.jsx)(n.a,{href:"/reference/react-sdk#counter-standalone",children:"Counter"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"popupWidth"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"number"}),", ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"Customize the width of the notifications popup."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"popupHeight"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"number"}),", ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"Customize the height of the notifications popup."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"popupZIndex"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Set the Z Index value for the notification popup. Default value is 1030."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"popoverPosition"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"anchorOrigin"}),": ",(0,t.jsx)(n.code,{children:"{"})," ",(0,t.jsx)(n.code,{children:"vertical"}),": ",(0,t.jsx)(n.code,{children:'"center"'}),", ",(0,t.jsx)(n.code,{children:'"bottom"'}),", ",(0,t.jsx)(n.code,{children:'"top"'}),", ",(0,t.jsx)(n.code,{children:"horizontal"}),": ",(0,t.jsx)(n.code,{children:'"center"'}),", ",(0,t.jsx)(n.code,{children:'"left"'}),", ",(0,t.jsx)(n.code,{children:'"right"'})]}),(0,t.jsx)(n.td,{children:"Set the position of the Notifications Popover relative to the Notification Popup Icon."})]})]})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<NotificationPopup\n  imageShape="circle"\n  pagination="PAGINATED"\n  pageSize={4}\n  pagePosition="bottom"\n/>\n'})}),(0,t.jsx)(n.h3,{id:"customizing-the-feed",children:"Customizing the Feed"}),(0,t.jsx)(n.p,{children:"Customize the feed using these parameters:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"filter"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Filter the notifications that appear in your feed using a custom component."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"header"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Pass in a custom React component as your header."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"imageShape"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:"circle"}),", ",(0,t.jsx)(n.code,{children:"square"})]}),(0,t.jsxs)(n.td,{children:["Render images with the feed in a circle or square. Set to ",(0,t.jsx)(n.code,{children:"circle"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"infiniteScrollHeight"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Determine a height for the feed component."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pagePosition"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:"bottom"}),", ",(0,t.jsx)(n.code,{children:"top"})]}),(0,t.jsxs)(n.td,{children:["Set a location for the page buttons. Requires ",(0,t.jsx)(n.code,{children:"pagination"})," to be set to ",(0,t.jsx)(n.code,{children:"PAGINATED"}),". Set to ",(0,t.jsx)(n.code,{children:"top"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pageSize"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsxs)(n.td,{children:["Adjust the number of notifications displayed per page. Requires ",(0,t.jsx)(n.code,{children:"pagination"})," to be set to ",(0,t.jsx)(n.code,{children:"PAGINATED"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pagination"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string:"})," ",(0,t.jsx)(n.code,{children:"INFINITE_SCROLL"}),", ",(0,t.jsx)(n.code,{children:"PAGINATED"})]}),(0,t.jsxs)(n.td,{children:["Determines whether your feed is paginated, or one page for all notifications. Set to ",(0,t.jsx)(n.code,{children:"PAGINATED"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"renderers"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"object"}),": ",(0,t.jsx)(n.code,{children:'{ notification: NotificationProps["renderer"] }'})]}),(0,t.jsx)(n.td,{children:"Render additional content within your feed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"style"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Record<SemanticDOM, CSSProperties>"})}),(0,t.jsx)(n.td,{children:"Pass in your styles to match our feed with your design."})]})]})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<NotificationFeed\n  pagination="PAGINATED"\n  pageSize={6}\n  pagePosition="bottom"\n  infiniteScrollHeight={300}\n/>\n'})}),(0,t.jsx)(n.h3,{id:"unread-badge",children:"Unread Badge"}),(0,t.jsxs)(n.p,{children:["You can customize the unread badge through the ",(0,t.jsx)(n.code,{children:"unreadBadgeProps"})," object. This object must adhere to the custom type ",(0,t.jsx)(n.code,{children:"UnreadBadgeProps"}),", which is defined as follows:"]}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"bubbleColor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string "})}),(0,t.jsx)(n.td,{children:"Customize the color for your badge"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"fontColor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string "})}),(0,t.jsx)(n.td,{children:"Customize the text color of your badge"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"count"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"string"}),": ",(0,t.jsx)(n.code,{children:'"COUNT_UNOPENED_NOTIFICATIONS"'}),", ",(0,t.jsx)(n.code,{children:'"COUNT_UNARCHIVED_NOTIFICATIONS"'}),", OR ",(0,t.jsx)(n.code,{children:"Custom"})]}),(0,t.jsxs)(n.td,{children:["Customize what notifications are counted and the value displayed in the badge. See ",(0,t.jsx)(n.a,{href:"#logical-customizations",children:"Logical Customizations"})," for details"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"dot"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"If true, the badge will display as a dot instead of a badge with a number."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"offset"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"object"}),": ",(0,t.jsx)(n.code,{children:"{"})," ",(0,t.jsx)(n.code,{children:"top: number"}),", ",(0,t.jsx)(n.code,{children:"bottom: number"}),", ",(0,t.jsx)(n.code,{children:"left: number"}),", ",(0,t.jsx)(n.code,{children:"right: number"})," ",(0,t.jsx)(n.code,{children:"}"})]}),(0,t.jsx)(n.td,{children:"Set an alternative location for the badge."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"max"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Badge displays a + beside your number when notifications exceed that amount."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"showZero"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Show a 0 on the badge when there are no new notifications."})]})]})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<NotificationPopup\n  unreadBadgeProps={{\n    bubbleColor="#000"\n    fontColor="red"\n    count= (n) => {\n      return n.opened === \'true\';\n    }\n    offSet={ top: 10, right: 10 }\n    max=99\n    showZero=true\n  }}\n/>\n'})}),(0,t.jsx)(n.h3,{id:"pagination",children:"Pagination"}),(0,t.jsx)(n.p,{children:"You can use this to set up pages for your feed. Design scrollable, interactive inbox for your users through our component. Your feed can be modified further using these arguments:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"bordered"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Toggle a border for your feed. Set to ",(0,t.jsx)(n.code,{children:"false"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"dataSource"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"any[]"})}),(0,t.jsx)(n.td,{children:"Set a data source for your feed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"footer"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Render a footer for your feed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"grid"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:"Give your feed grid properties via JSON."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"header"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Render a header for your feed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"itemLayout"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"horizontal"}),", ",(0,t.jsx)(n.code,{children:"vertical"})]}),(0,t.jsx)(n.td,{children:"Determine the layout of your feed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"loading"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"boolean"}),"+"]}),(0,t.jsxs)(n.td,{children:["Show a loading symbol within the component when fetching your ",(0,t.jsx)(n.code,{children:"dataSource"}),". False by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"loadMore"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsx)(n.td,{children:"Render a component to load more data for yuor feed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"locale"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:"i18n text or empty text."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"pagination"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", ",(0,t.jsx)(n.code,{children:"object"})]}),(0,t.jsxs)(n.td,{children:["Set and modify pagination for your feed. Set to ",(0,t.jsx)(n.code,{children:"false"})," by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"renderItem"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"(item) => ReactNode"})}),(0,t.jsxs)(n.td,{children:["Define a custom list when using ",(0,t.jsx)(n.code,{children:"dataSource"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"rowKey"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"keyof"})," X, ",(0,t.jsx)(n.code,{children:"(item: X) => React.Key"})]}),(0,t.jsx)(n.td,{children:"Determine an item's key value. Can be either a unique value or a function that returns a value."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"size"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"small"}),", ",(0,t.jsx)(n.code,{children:"default"}),", ",(0,t.jsx)(n.code,{children:"large"})]}),(0,t.jsx)(n.td,{children:"Adjust the size and spacing of your feed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"split"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Toggle a visual separator for individual notifications in your feed. Set to ",(0,t.jsx)(n.code,{children:"false"})," by default."]})]})]})]}),(0,t.jsx)(n.h2,{id:"logical-customizations",children:"Logical Customizations"}),(0,t.jsx)(n.h3,{id:"count",children:"Count"}),(0,t.jsx)(n.p,{children:"This refers to what notifications are counted in the counters or unread badges. You can use an existing mode or count the notifications by your own custom function:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"COUNT_UNOPENED_NOTIFICATIONS"})," (default): only counts notifications that are never seen/opened. Once the user opens the notification popup, the count will be reset to zero."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"COUNT_UNARCHIVED_NOTIFICATIONS"}),": only counts the notifications that are not archived. The count will change when the user marks notifications as archived."]}),"\n",(0,t.jsxs)(n.li,{children:["Custom: you can create your own function to count the notifications. The example code below counts notifications that belong to the ",(0,t.jsx)(n.code,{children:"welcome_notification"})," category and are not archived."]}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationPopup\n  count={(n) => {\n    return n.notificationId === 'welcome_notification' && !n.archived;\n  }}\n/>\n"})}),(0,t.jsx)(n.h2,{id:"filters",children:"Filters"}),(0,t.jsx)(n.p,{children:"This refers to which notifications are rendered in the pre-existing popup, feed, ... components. You can filter notifications via existing modes or create your own custom function:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ALL"})," (default): renders all notifications"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UNARCHIVED"}),": renders only notifications that are not archived"]}),"\n",(0,t.jsxs)(n.li,{children:["Custom: The example code below filters notifications that belong to the ",(0,t.jsx)(n.code,{children:"welcome_notification"})," category and are not archived."]}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"<NotificationPopup\n  count={(n) => {\n    return n.notificationId === 'welcome_notification' && !n.archived;\n  }}\n/>\n"})}),(0,t.jsx)(n.h2,{id:"customizing-each-notification",children:"Customizing each Notification"}),(0,t.jsx)(n.h2,{id:"headless-build-your-own-ui",children:"Headless (build your own UI)"}),(0,t.jsx)(n.p,{children:"You can build your own UI by reading the data inside our React Context object. It includes all our notification objects, users preferences, and functions for updating notification states. You can use these to build any notification UI you need."}),(0,t.jsx)(n.h3,{id:"setup-1",children:"Setup"}),(0,t.jsxs)(n.p,{children:["Inside the components wrapped in our ",(0,t.jsx)(n.code,{children:"NotificationAPIProvider"}),", you can access the context object using the ",(0,t.jsx)(n.code,{children:"useNotificationAPIContext"})," hook:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"export const MyComponent: React.FC = () => {\n  // highlight-next-line\n  const notificationapi = NotificationAPIProvider.useNotificationAPIContext();\n\n  return (\n    <Button\n      onClick={() => {\n        console.log(notificationapi.notifications);\n      }}\n    >\n      Click to log notifications\n    </Button>\n  );\n};\n"})}),(0,t.jsx)(n.h3,{id:"accessing-notification-data",children:"Accessing notification data"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"notificationapi.notifications;\n"})}),(0,t.jsx)(n.h3,{id:"accessing-user-preferences",children:"Accessing user preferences"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"notificationapi.preferences;\n"})}),(0,t.jsx)(n.h3,{id:"updating-user-preferences",children:"Updating user preferences"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"notificationapi.updateDelivery(\n  notificationId,\n  channel,\n  delivery,\n  subNotificationId?\n)\n"})}),(0,t.jsx)(n.h3,{id:"marking-loaded-notifications-as-openedseen",children:"Marking loaded notifications as opened/seen"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"notificationapi.markAsOpened();\n"})}),(0,t.jsx)(n.h3,{id:"marking-notifications-as-archived",children:"Marking notifications as archived"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"// to mark all as archived:\nnotificationapi.markAsArchived('ALL');\n\n// to mark invididual notifications as archived:\nnotificationapi.markAsArchived(['trackingId1', 'trackingId2']);\n"})}),(0,t.jsx)(n.h3,{id:"marking-a-notification-as-clicked",children:"Marking a notification as clicked"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"notificationapi.markAsClicked('trackingId');\n"})}),(0,t.jsx)(n.h2,{id:"asking-for-web-push-opt-in",children:"asking for web push opt in"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"notificationapi.setWebPushOptIn(true);\n"})}),(0,t.jsx)(n.h2,{id:"concepts",children:"Concepts"}),(0,t.jsx)(n.h3,{id:"how-does-it-work",children:"How does it work?"}),(0,t.jsx)(n.p,{children:"You trigger the API from the back-end and we store the notification. When users sign into the app, the sdk will pull their notification."}),(0,t.jsx)(n.h3,{id:"websocket",children:"Websocket"}),(0,t.jsx)(n.p,{children:"We have our own websocket for sending & receiving new notifications. With this websocket, users will automatically receive new notifications without needing to refresh their pages. Since the websocket is automatically in place, developers don't need to do anything to implement this."}),(0,t.jsx)(n.h3,{id:"in-app-notification-object",children:"In-App Notification Object"}),(0,t.jsx)(n.p,{children:"The in-app notification object takes several arguments."}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"actioned1"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Coming soon! Assign a function for button 1 in your template, if a custom button has been assigned."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"actioned2"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Coming soon! Assign a function for button 2 in your template, if a custom button has been assigned."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"archived"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:'Determines if the notification is considered as archived. Also referred to as "resolved".'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"body"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReactNode"})}),(0,t.jsxs)(n.td,{children:["Used to add your ",(0,t.jsx)(n.a,{href:"react-sdk#ui-customizations",children:"custom UI"})," to your notification."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"clicked"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Determines if the notification has been clicked on by the recipient."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"date"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Using ISO 8607 formatting (YYYY-MM-DD), give your notification a date."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"expDate"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"Give your notification a TTL by passing in a Unix timestamp (in sencods). The notification will expire once the timestamp has passed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"id"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Your notification's tracking ID. Not the same as notificationId."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"imageURL"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Embed an image within your notification."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"notificationId"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The ID for your notification's template."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"opened"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Determines if the notification has been opened by the recipient. Notifications are considered opened if rendered onscreen for the recipient."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"parameters"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Record<string, unknown>"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.a,{href:"/features/mergetags",children:"Mergetags."})," Give your notification mergetags/props that can pass values into matching mergetags within your notification templates."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"redirectURL"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"Give your notification a link to send users to upon clicking."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"replies"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object: { date: string, message: string }[],"})}),(0,t.jsx)(n.td,{children:"Coming soon - Contains user comments/replies to the notification if enabled."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"title"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"A title for your in-app notification."})]})]})]}),(0,t.jsx)(n.h2,{id:"identify",children:"identify"}),(0,t.jsx)(n.p,{children:"Stores the end-user information for a given user."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"notificationapi\n  .getClient()\n  .identify({ id: '' }) // or mention the userId passed in the provider\n  .then((result) => console.log(result));\n"})})]})]})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(y,{...e})}):y(e)}}}]);