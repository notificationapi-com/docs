"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9908],{9786:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>k,frontMatter:()=>o,metadata:()=>h,toc:()=>u});var a=t(4848),l=t(8453),c=t(1470),i=t(9365),r=t(5604);const o={sidebar_position:7,sidebar_label:"\ud83d\udde8\ufe0f Slack"},s=" Slack",h={id:"channels/slack",title:"<div><FaSlack /> Slack</div>",description:"Overview",source:"@site/docs/channels/slack.md",sourceDirName:"channels",slug:"/channels/slack",permalink:"/channels/slack",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,sidebar_label:"\ud83d\udde8\ufe0f Slack"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcac SMS",permalink:"/channels/sms"},next:{title:"\ud83d\udcde Automated Voice Calls",permalink:"/channels/call"}},d={},u=[{value:"Overview",id:"overview",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Slack App Setup",id:"slack-app-setup",level:2},{value:"Frontend Integration Example",id:"frontend-integration-example",level:2}];function p(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"-slack",children:(0,a.jsxs)("div",{children:[(0,a.jsx)(r.iWS,{})," Slack"]})})}),"\n",(0,a.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(e.p,{children:"Integrate Slack with NotificationAPI to send notifications directly to your users' Slack channels. This guide will help you connect your Slack workspace and provide a ready-to-use frontend integration example for various frameworks."}),"\n",(0,a.jsx)(e.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"A Slack workspace"}),"\n",(0,a.jsx)(e.li,{children:"Access to NotificationAPI"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"slack-app-setup",children:"Slack App Setup"}),"\n",(0,a.jsx)(e.p,{children:"To enable Slack notifications, simply install the NotificationAPI Slack app in your workspace. You can also allow your users to connect their Slack accounts using the integration component below."}),"\n",(0,a.jsx)(e.h2,{id:"frontend-integration-example",children:"Frontend Integration Example"}),"\n",(0,a.jsxs)(e.p,{children:["Use the following component to let your users connect their Slack accounts. The example supports React, Next.js, Remix, Nuxt3, Angular, Vue, and Vanilla JS. Make sure to set the ",(0,a.jsx)(e.code,{children:"CLIENT_ID"})," prop to your NotificationAPI environment (e.g., ",(0,a.jsx)(e.code,{children:"production"}),", ",(0,a.jsx)(e.code,{children:"testing"}),")."]}),"\n",(0,a.jsxs)(c.A,{groupId:"frontend-language",defaultValue:"react",values:[{label:"React",value:"react"},{label:"Remix",value:"remix"},{label:"Vue",value:"vue"},{label:"Angular",value:"angular"},{label:"Next.js",value:"next"}],children:[(0,a.jsx)(i.A,{value:"react",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",children:"import React, { useState } from 'react';\n\nconst SlackIntegration = ({ userId }) => {\n  const [channel, setChannel] = useState('');\n  const handleSlackAuth = () => {\n    if (!channel) {\n      alert('Enter a channel name');\n      return;\n    }\n    const url =\n      'https://slack.com/oauth/v2/authorize?' +\n      'client_id=1146598856352.8825220259395' +\n      '&scope=chat:write,channels:read' +\n      `&redirect_uri=https://app.notificationapi.com/slack/oauth/callback/${CLIENT_ID}/userId/${userId}`;\n    window.open(url, 'slack_auth', 'width=500,height=600');\n  };\n  return (\n    <div>\n      <input\n        value={channel}\n        onChange={(e) => setChannel(e.target.value)}\n        placeholder=\"Channel (e.g. #general)\"\n      />\n      <button onClick={handleSlackAuth}>Add to Slack</button>\n    </div>\n  );\n};\n"})})}),(0,a.jsx)(i.A,{value:"next",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",children:"'use client';\n\nimport React, { useState } from 'react';\n\nconst SlackIntegration = ({ userId }) => {\n  const [channel, setChannel] = useState('');\n  const handleSlackAuth = () => {\n    if (!channel) {\n      alert('Enter a channel name');\n      return;\n    }\n    const url =\n      'https://slack.com/oauth/v2/authorize?' +\n      'client_id=1146598856352.8825220259395' +\n      '&scope=chat:write,channels:read' +\n      `&redirect_uri=https://app.notificationapi.com/slack/oauth/callback/${CLIENT_ID}/userId/${userId}`;\n    window.open(url, 'slack_auth', 'width=500,height=600');\n  };\n  return (\n    <div>\n      <input\n        value={channel}\n        onChange={(e) => setChannel(e.target.value)}\n        placeholder=\"Channel (e.g. #general)\"\n      />\n      <button onClick={handleSlackAuth}>Add to Slack</button>\n    </div>\n  );\n};\n\nexport default SlackIntegration;\n"})})}),(0,a.jsx)(i.A,{value:"remix",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",children:"import { useState } from 'react';\n\nconst SlackIntegration = ({ userId }) => {\n  const [channel, setChannel] = useState('');\n\n  const handleSlackAuth = () => {\n    if (!channel) {\n      alert('Enter a channel name');\n      return;\n    }\n    const url =\n      'https://slack.com/oauth/v2/authorize?' +\n      'client_id=1146598856352.8825220259395' +\n      '&scope=chat:write,channels:read' +\n      `&redirect_uri=https://app.notificationapi.com/slack/oauth/callback/${CLIENT_ID}/userId/${userId}`;\n    window.open(url, 'slack_auth', 'width=500,height=600');\n  };\n\n  return (\n    <div>\n      <input\n        value={channel}\n        onChange={(e) => setChannel(e.target.value)}\n        placeholder=\"Channel (e.g. #general)\"\n      />\n      <button onClick={handleSlackAuth}>Add to Slack</button>\n    </div>\n  );\n};\n\nexport default SlackIntegration;\n"})})}),(0,a.jsx)(i.A,{value:"vue",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",children:'<template>\n  <div>\n    <input\n      v-model="channel"\n      placeholder="Channel (e.g. #general)"\n    />\n    <button @click="handleSlackAuth">Add to Slack</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'SlackIntegration\',\n  props: {\n    userId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      channel: \'\'\n    }\n  },\n  methods: {\n    handleSlackAuth() {\n      if (!this.channel) {\n        alert(\'Enter a channel name\');\n        return;\n      }\n      const url =\n        "https://slack.com/oauth/v2/authorize?"\n        + "client_id=1146598856352.8825220259395"\n        + "&scope=chat:write,channels:read"\n        + `&redirect_uri=https://app.notificationapi.com/slack/oauth/callback/${CLIENT_ID}/userId/${this.userId}`;\n      window.open(url, "slack_auth", "width=500,height=600");\n    }\n  }\n}\n<\/script>\n\n'})})}),(0,a.jsx)(i.A,{value:"angular",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",children:'import { Component } from \'@angular/core\';\n\n@Component({\n  selector: \'app-slack-integration\',\n  template: `\n    <div>\n      <input\n        [(ngModel)]="channel"\n        placeholder="Channel (e.g. #general)"\n      />\n      <button (click)="handleSlackAuth()">Add to Slack</button>\n    </div>\n  `\n})\nexport class SlackIntegrationComponent {\n  channel: string = \'\';\n\n  @Input() userId!: string;\n\n  handleSlackAuth() {\n    if (!this.channel) {\n      alert(\'Enter a channel name\');\n      return;\n    }\n    const url =\n      "https://slack.com/oauth/v2/authorize?"\n      + "client_id=1146598856352.8825220259395"\n      + "&scope=chat:write,channels:read"\n      + `&redirect_uri=https://app.notificationapi.com/slack/oauth/callback/${CLIENT_ID}/userId/${this.userId}`;\n    window.open(url, "slack_auth", "width=500,height=600");\n  }\n}\n\n'})})})]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Note:"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Replace ",(0,a.jsx)(e.code,{children:"userId"})," with your application's user identifier."]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"CLIENT_ID"}),"is your NotificationAPI account clientId. You can get it from ",(0,a.jsx)(e.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]}),"\n",(0,a.jsxs)(e.li,{children:["The ",(0,a.jsx)(e.code,{children:"redirect_uri"})," should match your NotificationAPI environment and user ID."]}),"\n",(0,a.jsxs)(e.li,{children:["For more details, see the ",(0,a.jsx)(e.a,{href:"https://docs.notificationapi.com/",children:"NotificationAPI documentation"}),"."]}),"\n"]}),"\n"]})]})}function k(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}}}]);