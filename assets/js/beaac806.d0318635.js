"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[337],{5464:(e,n,i)=>{i.r(n),i.d(n,{Highlight:()=>h,assets:()=>l,contentTitle:()=>d,default:()=>j,frontMatter:()=>c,metadata:()=>o,toc:()=>u});var t=i(4848),s=i(8453),r=i(1470),a=i(9365);const c={sidebar_position:1},d="Server SDKs (Back-end)",o={id:"reference/server",title:"Server SDKs (Back-end)",description:"The server-side SDKs allow you to trigger sending notifications, setting user preferences and more. Supported environments:",source:"@site/docs/reference/server.md",sourceDirName:"reference",slug:"/reference/server",permalink:"/reference/server",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udf10 Web Push",permalink:"/channels/web-push"},next:{title:"React SDK (Front-End)",permalink:"/reference/react-sdk"}},l={},h=({children:e,color:n})=>{const i={span:"span",...(0,s.R)()};return(0,t.jsx)(i.span,{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem",fontSize:"0.75rem"},children:e})},u=[{value:"Setup &amp; Initialization",id:"setup--initialization",level:2},{value:"send",id:"send",level:2},{value:"Options Object",id:"options-object",level:4},{value:"Size Limitation",id:"size-limitation",level:4},{value:"identifyUser",id:"identifyuser",level:2},{value:"Parameters",id:"parameters",level:3},{value:"pushTokens object",id:"pushtokens-object",level:4},{value:"device object",id:"device-object",level:5},{value:"webPushTokens object",id:"webpushtokens-object",level:4},{value:"Web push subscription (sub) object",id:"web-push-subscription-sub-object",level:5},{value:"Web push subscription keys object",id:"web-push-subscription-keys-object",level:5},{value:"setUserPreferences",id:"setuserpreferences",level:2},{value:"Parameters",id:"parameters-1",level:4},{value:"Preference Object",id:"preference-object",level:4},{value:"deleteUserPreferences",id:"deleteuserpreferences",level:2},{value:"Parameters",id:"parameters-2",level:4},{value:"updateInAppNotification",id:"updateinappnotification",level:2},{value:"Parameters",id:"parameters-3",level:4},{value:"params",id:"params",level:4},{value:"retract",id:"retract",level:2},{value:"updateSchedule",id:"updateschedule",level:2},{value:"deleteSchedule",id:"deleteschedule",level:2},{value:"queryLogs",id:"querylogs",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"server-sdks-back-end",children:"Server SDKs (Back-end)"})}),"\n","\n",(0,t.jsx)(n.p,{children:"The server-side SDKs allow you to trigger sending notifications, setting user preferences and more. Supported environments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Node.js ",(0,t.jsx)(h,{color:"#25c2a0",children:"official"})]}),"\n",(0,t.jsxs)(n.li,{children:["Python ",(0,t.jsx)(h,{color:"#25c2a0",children:"official"})]}),"\n",(0,t.jsxs)(n.li,{children:["PHP ",(0,t.jsx)(h,{color:"#25c2a0",children:"official"})]}),"\n",(0,t.jsxs)(n.li,{children:["Laravel ",(0,t.jsx)(h,{color:"#25c2a0",children:"official"})]}),"\n",(0,t.jsxs)(n.li,{children:["Go ",(0,t.jsx)(h,{color:"#25c2a0",children:"official"})]}),"\n",(0,t.jsxs)(n.li,{children:["C# ",(0,t.jsx)(h,{color:"#25c2a0",children:"official"})]}),"\n",(0,t.jsxs)(n.li,{children:["Ruby ",(0,t.jsx)(h,{color:"#ff9966",children:"documented"})]}),"\n",(0,t.jsx)(n.li,{children:"Any environment that supports HTTP calls"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If you don't see your language/framework documented here, just ping us on support and we will provide samples and docs."}),"\n",(0,t.jsx)(n.h2,{id:"setup--initialization",children:"Setup & Initialization"}),"\n","\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Laravel",value:"laravel"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsxs)(a.A,{value:"js",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install using one of the following package managers:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install notificationapi-node-server-sdk\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yarn add notificationapi-node-server-sdk\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"pnpm add notificationapi-node-server-sdk\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Import:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import notificationapi from 'notificationapi-node-server-sdk';\n// or using require:\n// const notificationapi = require('notificationapi-node-server-sdk').default;\n"})}),(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Initialize:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.init('CLIENT_ID', 'CLIENT_SECRET');\n"})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_ID"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_SECRET"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account client secret. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"config"})}),(0,t.jsx)(n.td,{children:"InitConfiguration"}),(0,t.jsx)(n.td,{children:"Optional configuration object for additional initialization options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"config.baseURL"})}),(0,t.jsx)(n.td,{children:"string | Region"}),(0,t.jsxs)(n.td,{children:["To choose a different region other than default (",(0,t.jsx)(n.a,{href:"https://api.notificationapi.com",children:"https://api.notificationapi.com"}),").",(0,t.jsx)("br",{})," Can be a region constant (e.g. Region.EU_REGION or Region.CA_REGION)",(0,t.jsx)("br",{})," or a custom URL string (e.g. '",(0,t.jsx)(n.a,{href:"https://api.eu.notificationapi.com",children:"https://api.eu.notificationapi.com"}),"' or '",(0,t.jsx)(n.a,{href:"https://api.ca.notificationapi.com",children:"https://api.ca.notificationapi.com"}),"')"]})]})]})]}),(0,t.jsx)(n.p,{children:"* required"}),(0,t.jsx)(n.p,{children:"Region specific example using imported Region:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import notificationapi from 'notificationapi-node-server-sdk';\nimport { Region } from 'notificationapi-node-server-sdk';\n\nnotificationapi = NotificationAPI.new('CLIENT_ID', 'CLIENT_SECRET', {\n  baseURL: Region.EU_REGION\n});\n"})}),(0,t.jsx)(n.p,{children:"Region specific example using string:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import notificationapi from 'notificationapi-node-server-sdk';\n\nnotificationapi = NotificationAPI.new('CLIENT_ID', 'CLIENT_SECRET', {\n  baseURL: 'https://api.eu.notificationapi.com'\n});\n"})})]}),(0,t.jsxs)(a.A,{value:"python",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install Package:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install notificationapi_python_server_sdk\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Import:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from notificationapi_python_server_sdk import notificationapi\n"})}),(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Initialize:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'notificationapi.init("CLIENT_ID", "CLIENT_SECRET")\n'})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_ID"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_SECRET"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account client secret. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"base_url"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["To choose a different region than default (",(0,t.jsx)(n.a,{href:"https://api.notificationapi.com",children:"https://api.notificationapi.com"}),"). Can be a region constant (e.g. EU_REGION or CA_REGION) or a custom URL string (e.g. '",(0,t.jsx)(n.a,{href:"https://api.eu.notificationapi.com",children:"https://api.eu.notificationapi.com"}),"')."]})]})]})]}),(0,t.jsx)(n.p,{children:"* required"}),(0,t.jsx)(n.p,{children:"Region specific example using imported Region constant:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from notificationapi_python_server_sdk import notificationapi, EU_REGION\n\nnotificationapi.init("CLIENT_ID", "CLIENT_SECRET", EU_REGION)\n'})}),(0,t.jsx)(n.p,{children:"Region specific example using string:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'notificationapi.init("CLIENT_ID", "CLIENT_SECRET", "https://api.eu.notificationapi.com")\n'})})]}),(0,t.jsxs)(a.A,{value:"php",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install Package:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"composer require notificationapi/notificationapi-php-server-sdk\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Import:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use NotificationAPI\\NotificationAPI;\n"})}),(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Initialize:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"$notificationapi = new NotificationAPI('CLIENT_ID', 'CLIENT_SECRET');\n"})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_ID"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_SECRET"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account client secret. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional initialization options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.baseURL"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["To choose a different region than default (US). Use ",(0,t.jsx)(n.a,{href:"https://api.ca.notificationapi.com",children:"https://api.ca.notificationapi.com"})," to access the Canada region."]})]})]})]}),(0,t.jsx)(n.p,{children:"* required"})]}),(0,t.jsxs)(a.A,{value:"laravel",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install Package:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"composer require notificationapi/notificationapi-laravel-server-sdk:@dev\n"})}),(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["If your ",(0,t.jsx)(n.code,{children:"composer.json"}),"'s ",(0,t.jsx)(n.code,{children:'"minimum-stability"'})," field is ",(0,t.jsx)(n.code,{children:'"stable"'}),", then you may need to run ",(0,t.jsx)(n.code,{children:"composer require notificationapi/notificationapi-php-server-sdk:@dev"})," to ensure that the ",(0,t.jsx)(n.code,{children:"notificationapi-laravel-server-sdk"})," package has its dependencies installed as well."]}),(0,t.jsxs)(n.p,{children:["Alternatively you can update ",(0,t.jsx)(n.code,{children:'"minimum-stability"'})," to ",(0,t.jsx)(n.code,{children:'"dev"'})," instead of explicitely installing ",(0,t.jsx)(n.code,{children:"notificationapi-php-server-sdk:@dev"}),"."]})]}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Register the NotificationApiServiceProvider with config/app.php:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"'providers' => [\n\t// ...\n\tNotificationAPI\\NotificationApiServiceProvider::class,\n]\n"})}),(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Add NotificationAPI keys to .env:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"NOTIFICATION_API_KEY=clientID\nNOTIFICATION_API_SECRET=clientSecret\n"})}),(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Generate Notification:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"php artisan make:notification MyNotification\n"})}),(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:"Update the Notification class:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'class MyNotification extends Notification\n{\n    // ...\n\n    public function via($notifiable)\n    {\n        return [\'notification-api\'];\n    }\n\n    public function toNotificationApi($notifiable)\n    {\n        return [\n            "notificationId" => "my_notification_id",\n            "user" => [\n                "id" => $notifiable->getAttribute(\'id\'),\n                "email" => $notifiable->getAttribute(\'email\'),\n            ],\n            "mergeTags" => [\n                "userName" => auth()->user()->name\n            ]\n        ];\n    }\n}\n'})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_ID"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_SECRET"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account client secret. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional initialization options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.baseURL"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["To choose a different region than default (US). Use ",(0,t.jsx)(n.a,{href:"https://api.ca.notificationapi.com",children:"https://api.ca.notificationapi.com"})," to access the Canada region."]})]})]})]}),(0,t.jsx)(n.p,{children:"* required"})]}),(0,t.jsxs)(a.A,{value:"go",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install Package:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"go get github.com/notificationapi-com/notificationapi-go-server-sdk\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Import:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'import (\n  notificationapi "github.com/notificationapi-com/notificationapi-go-server-sdk"\n)\n'})}),(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Initialize:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'notificationapi.Init("CLIENT_ID", "CLIENT_SECRET")\n'})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_ID"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_SECRET"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account client secret. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional initialization options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.baseURL"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["To choose a different region than default (US). Use ",(0,t.jsx)(n.a,{href:"https://api.ca.notificationapi.com",children:"https://api.ca.notificationapi.com"})," to access the Canada region."]})]})]})]}),(0,t.jsx)(n.p,{children:"* required"})]}),(0,t.jsxs)(a.A,{value:"csharp",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install Package:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet add package NotificationAPI --version 0.5.0\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Import:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using NotificationApi.Server;\nusing NotificationApi.Server.Models;\n"})}),(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Initialize:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'var notificationApi = new NotificationApiServer("CLIENT_ID", "CLIENT_SECRET", false);\n'})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_ID"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_SECRET"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account client secret. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional initialization options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.baseURL"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["To choose a different region than default (US). Use ",(0,t.jsx)(n.a,{href:"https://api.ca.notificationapi.com",children:"https://api.ca.notificationapi.com"})," to access the Canada region."]})]})]})]}),(0,t.jsx)(n.p,{children:"* required"})]}),(0,t.jsxs)(a.A,{value:"ruby",children:[(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Copy the following class to your application:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"require 'net/http'\nrequire 'json'\nrequire 'base64'\nrequire 'openssl'\n\nclass NotificationAPI\n  def initialize(client_id, client_secret)\n    @base_url = 'https://api.notificationapi.com'\n    @client_id = client_id\n    @auth_token = Base64.strict_encode64(\"#{client_id}:#{client_secret}\")\n    @http_client = Net::HTTP.new('api.notificationapi.com', 443)\n    @http_client.use_ssl = true\n  end\n\n  def send(request)\n    payload = request.to_json\n    response = @http_client.post(\n      \"/#{@client_id}/sender\",\n      payload,\n      {\n        'Content-Type' => 'application/json',\n        'Authorization' => \"Basic #{@auth_token}\"\n      }\n    )\n    response.body\n  end\n\n  def retract(request)\n    payload = request.to_json\n    response = @http_client.post(\n      \"/#{@client_id}/sender/retract\",\n      payload,\n      {\n        'Content-Type' => 'application/json',\n        'Authorization' => \"Basic #{@auth_token}\"\n      }\n    )\n    response.body\n  end\n\n  def identify_user(user_id, user_data)\n    digest = OpenSSL::Digest::SHA256.new\n    hmac = OpenSSL::HMAC.digest(digest, @client_secret, user_id)\n    hashed_user_id = Base64.strict_encode64(hmac)\n    custom_auth = Base64.strict_encode64(\"#{@client_id}:#{user_id}:#{hashed_user_id}\")\n\n    send_request('POST', \"users/#{URI.escape(user_id)}\", user_data, custom_auth)\n  end\n\n  def create_sub_notification(notification_id, sub_notification_id, title)\n    payload = { title: title }\n    send_request('PUT', \"notifications/#{notification_id}/subNotifications/#{sub_notification_id}\", payload)\n  end\n\n  def delete_sub_notification(notification_id, sub_notification_id)\n    send_request('DELETE', \"notifications/#{notification_id}/subNotifications/#{sub_notification_id}\")\n  end\n\n  def update_schedule(tracking_id, scheduleUpdate)\n    send_request('PATCH', \"notifications/#{tracking_id}\", scheduleUpdate)\n  end\n\n  def delete_schedule(tracking_id)\n    send_request('DELETE', \"notifications/#{tracking_id}\")\n  end\n\n  def set_user_preferences(user_id, user_preferences)\n    send_request('POST', \"user_preferences/#{user_id}\", user_preferences)\n  end\n\n  private\n\n  def send_request(method, uri, data = {}, auth = \"Basic #{@auth_token}\")\n    payload = data.to_json\n    response = @http_client.send_request(\n      method,\n      \"/#{@client_id}/#{uri}\",\n      payload,\n      {\n        'Content-Type' => 'application/json',\n        'Authorization' => auth\n      }\n    )\n    response.body\n  end\n\nend\n"})}),(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Initialize:"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi = NotificationAPI.new('CLIENT_ID', 'CLIENT_SECRET');\n"})}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_ID"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account clientId. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"CLIENT_SECRET"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Your NotificationAPI account client secret. You can get it from ",(0,t.jsx)(n.a,{href:"https://app.notificationapi.com/environments",children:"here"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional initialization options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options.baseURL"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["To choose a different region than default (US). Use ",(0,t.jsx)(n.a,{href:"https://api.ca.notificationapi.com",children:"https://api.ca.notificationapi.com"})," to access the Canada region."]})]})]})]}),(0,t.jsx)(n.p,{children:"* required"})]})]}),"\n",(0,t.jsx)(n.h2,{id:"send",children:"send"}),"\n",(0,t.jsx)(n.p,{children:"Used to send a notification to the specified user."}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Laravel",value:"laravel"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.send({\n  notificationId: 'order_tracking',\n  user: {\n    id: 'spongebob.squarepants',\n    email: 'spongebob@squarepants.com',\n    number: '+15005550006'\n  },\n  mergeTags: {\n    item: 'Krabby Patty Burger',\n    address: '124 Conch Street',\n    orderId: '1234567890'\n  }\n});\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def send_notification():\n  await notificationapi.send(\n    {\n      "notificationId": "order_tracking",\n      "user": {\n        "id": "spongebob.squarepants",\n        "email": "spongebob@squarepants.com",\n        "number": "+15005550006",\n      },\n      "mergeTags": {\n        "item": "Krabby Patty Burger",\n        "address": "124 Conch Street",\n        "orderId": "1234567890"\n      }\n    }\n  )\n\n# Run the async function\nasyncio.run(send_notification())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->send([\n    "notificationId" => "order_tracking",\n    "user" => [\n        "id" => "spongebob.squarepants",\n        "email" => "spongebob@squarepants.com",\n        "number" => "+15005550006"\n    ],\n  "mergeTags" => [\n    "item" => "Krabby Patty Burger",\n    "address" => "124 Conch Street",\n    "orderId" => "1234567890"\n  ]\n]);\n'})})}),(0,t.jsxs)(a.A,{value:"laravel",children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"notificationapi-laravel-server-sdk"})," package uses Laravel's ",(0,t.jsx)(n.a,{href:"https://laravel.com/docs/master/notifications",children:"notifications"}),"."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\nuse App\\Models\\User;\nuse App\\Notifications\\MyNotification;\n\n$user = new User();\n$user->name = 'John Doe';\n$user->id = 'john.doe@example.com';\n$user->email = 'john.doe@example.com';\n\n// Send the notification to the user\n$user->notify(new MyNotification($user));\n"})}),(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Alternatively you can send a notification without using Laravel's notifications:"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$data = [\n  "notificationId" => "my_notification_id",\n  "user" => [\n      "id" => "user_id",\n      "email" => "john.doe@example.com",\n  ],\n  "mergeTags" => [\n      "userName" => "user_name"\n  ]\n];\n\n$result = notification_api($data);\n#or\n$result = (new NotificationApiService)->send($data)\n'})})]}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'mergeTags := make(map[string]interface{}) // Change to map[string]interface{}\nmergeTags["item"] = "Krabby Patty Burger"\nmergeTags["address"] = "124 Conch Street"\nmergeTags["orderId"] = "1234567890"\n\nnotificationapi.Send(\n  notificationapi.SendRequest{\n    NotificationId: "order_tracking",\n    User: notificationapi.User{\n      Id:     "test_user_id",\n      Email:  "spongebob@squarepants.com",\n    },\n    MergeTags: mergeTags,\n  },\n)\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'var user = new NotificationUser("spongebob.squarepants")\n{\n    Email = "spongebob@squarepants.com",\n    TelephoneNumber = "+15005550006"\n};\n\nvar mergeTags = new Dictionary<string, object>\n{\n    { "item", "Krabby Patty Burger" },\n    { "address", "124 Conch Street" },\n    { "orderId", "1234567890" }\n};\n\nawait notificationApi.Send(new SendNotificationData("curl_test", user)\n{\n    MergeTags = mergeTags\n});\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"notificationapi.send({\n  notificationId: 'order_tracking',\n  user: {\n    id: 'spongebob.squarepants',\n    email: 'spongebob@squarepants.com',\n    number: '+15005550006'\n  },\n  mergeTags: {\n    item: 'Krabby Patty Burger',\n    address: '124 Conch Street',\n    orderId: '1234567890'\n  }\n});\n"})})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,t.jsx)(n.p,{children:"The send() method accepts an object with the following fields:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"notificationId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the notification you wish to send. You can find this value from the dashboard."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"user"}),"*"]}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"The user to send the notification to."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"user.id"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the user in your system. Required. This is the only user field required for sending in-app, web push, and mobile push notifications."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"user.email"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Required for sending email notifications, otherwise optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"user.number"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Required for SMS/CALL notifications, otherwise optional. Valid format: ",(0,t.jsx)(n.code,{children:"+15005550006"}),". Unformatted US/Canada numbers are also accepted, e.g., (415) 555-1212, 415-555-1212, or 4155551212."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"user.timezone"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The user's timezone. Timezone names correspond to the Zone and Link names of the IANA Time Zone Database, such as 'America/New_York', 'America/Denver', 'EST', and 'UTC'."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"mergeTags"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsxs)(n.td,{children:["Used to pass in dynamic values into the notification design. Read more: ",(0,t.jsx)(n.a,{href:"/features/mergetags",children:"Dynamic Parameters (Merge Tags)"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"schedule"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["An ISO 8601 datetime string to schedule the notification for. For example, ",(0,t.jsx)(n.code,{children:"2024-02-20T14:38:03.509Z"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"replace"})}),(0,t.jsx)(n.td,{children:"object, string key/value pair"}),(0,t.jsxs)(n.td,{children:["Similar to mergeTags, but more flexible. Like the programmatic string replace function, this parameter will replace any string in the notification templates with another string. This operation happens on the fly when sending the notification and does not actually modify the templates. ",(0,t.jsx)("br",{})," This operation is case-sensitive and happens after mergeTags are injected."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"subNotificationId"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["To break down your notification into multiple categories or groups. Read more: ",(0,t.jsx)(n.a,{href:"/features/subnotifications",children:"Sub Notifications"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"templateId"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["By default, notifications are sent using the default template of each channel. You can permanently change the default template from the dashboard. However, you can also use this parameter to force using a specific template. This is useful in multiple situations: ",(0,t.jsx)("br",{}),' - Design variation: using different wording and design, e.g. "You have new updates" vs. "You don\'t have any updates" ',(0,t.jsx)("br",{})," - White-labeling: using a specific template that you designed for a white-labeled customer ",(0,t.jsx)("br",{})," - Language: creating and using multiple templates for multiple languages ",(0,t.jsx)("br",{})," If the provided templateId does not exist for a channel, the default template will be used, and a warning message will be generated."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"forceChannels"})," (deprecated)"]}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsxs)(n.td,{children:["Used to override the channels which are used for the notification. This field only overrides the notification's channels configuration. It does not override the user preferences.",(0,t.jsx)("br",{}),"Values available for use are:",(0,t.jsx)("br",{}),"EMAIL, INAPP_WEB, SMS, CALL, PUSH, WEB_PUSH",(0,t.jsx)("br",{}),"E.g. forceChannels: ",(0,t.jsx)(n.code,{children:'["EMAIL", "SMS"]'})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"For configuring additional options"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"options-object",children:"Options Object"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Email options features."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email.replyToAddresses"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"An array of email addresses that will receive responses when recipients reply to the notification email. This enables two-way email communication, allowing recipients to respond directly to notifications.`"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email.ccAddresses"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"An array of emails to be CC'ed on the email notifications."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email.bccAddresses"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"An array of emails to be BCC'ed on the email notifications."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email.fromName"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:'A string to display as the "From" field in an email'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email.fromAddress"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"An email address to send the email from"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email.attachments"})}),(0,t.jsxs)(n.td,{children:["{"," filename: string; url: string ","}","[]"]}),(0,t.jsx)(n.td,{children:"An array of publicly accessible URLs and filenames pointing to files that you wish to include as attachments. The URLs only need to be valid for a few minutes after calling the SDK method. After that, the public URLs can be disabled for privacy. The maximum email size (including the content and all attachments) is 25MB. File extensions in the filename property are necessary for the file to show up nicely in the recipient's device."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional Apple push notification"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn.expiry"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"The UNIX timestamp representing when the notification should expire. This does not contribute to the 2048 byte payload size limit. An expiry of 0 indicates that the notification expires immediately."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn.priority"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"The priority of the notification. If you omit this header, APNs sets the notification priority to 10. Specify 10 to send the notification immediately. Specify 5 to send the notification based on power considerations on the user\u2019s device. Specify 1 to prioritize the device\u2019s power considerations over all other factors for delivery, and prevent awakening the device."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn.collapseId"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"An identifier you use to merge multiple notifications into a single notification for the user. Typically, each notification request displays a new notification on the user\u2019s device. When sending the same notification more than once, use the same value in this header to merge the requests. The value of this key must not exceed 64 bytes."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn.threadId"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Provide this key with a string value that represents the app-specific identifier for grouping notifications. If you provide a Notification Content app extension, you can use this value to group your notifications together. For local notifications, this key corresponds to the threadIdentifier property of the UNNotificationContent object."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn.badge"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"Include this key when you want the system to modify the badge of your app icon. If this key is not included in the dictionary, the badge is not changed. To remove the badge, set the value of this key to 0."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn.sound"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["Include this key when you want the system to play a sound. The value of this key is the name of a sound file in your app\u2019s main bundle or in the Library/Sounds folder of your app\u2019s data container. If the sound file cannot be found, or if you specify default for the value, the system plays the default alert sound. For details about providing sound files for notifications; see ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/SupportingNotificationsinYourApp.html#//apple_ref/doc/uid/TP40008194-CH4-SW10",children:"here"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apn.contentAvailable"})}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsxs)(n.td,{children:["Include this key with a value of 1 to configure a background update notification. When this key is present, the system wakes up your app in the background and delivers the notification to its app delegate. For information about configuring and handling background update notifications, see ",(0,t.jsx)(n.a,{href:"https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CreatingtheNotificationPayload.html#//apple_ref/doc/uid/TP40008194-CH10-SW8",children:"here"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fcm"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional Firebase Cloud Messaging push notification options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fcm.android"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Additional Android push notification options"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fcm.android.collapseKey"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:'This parameter identifies a group of messages (e.g., with collapse_key: "Updates Available") that can be collapsed, so that only the last message gets sent when delivery can be resumed. This is intended to avoid sending too many of the same messages when the device comes back online or becomes active. Note that there is no guarantee of the order in which messages get sent. Note: A maximum of 4 different collapse keys is allowed at any given time. This means a FCM connection server can simultaneously store 4 different send-to-sync messages per client app. If you exceed this number, there is no guarantee which 4 collapse keys the FCM connection server will keep.'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fcm.android.priority"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:'Sets the priority of the message. Valid values are "normal" and "high." On iOS, these correspond to APNs priorities 5 and 10. By default, notification messages are sent with high priority, and data messages are sent with normal priority. Normal priority optimizes the client app\'s battery consumption and should be used unless immediate delivery is required. For messages with normal priority, the app may receive the message with unspecified delay. When a message is sent with high priority, it is sent immediately, and the app can wake a sleeping device and open a network connection to your server.'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fcm.android.ttl"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["This parameter specifies how long (in seconds) the message should be kept in FCM storage if the device is offline. The maximum time to live supported is 4 weeks, and the default value is 4 weeks. For more information, see ",(0,t.jsx)(n.a,{href:"https://firebase.google.com/docs/cloud-messaging/concept-options#ttl",children:"Setting the lifespan of a message"})]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"size-limitation",children:"Size Limitation"}),"\n",(0,t.jsx)(n.p,{children:"When using parameters (merge tags) in the body of your notifications, it is recommended that the size of the combined parameters not exceed 150 KB. Exceeding this limit may result in delivery failure, or an API error."}),"\n",(0,t.jsx)(n.h2,{id:"identifyuser",children:"identifyUser"}),"\n",(0,t.jsx)(n.p,{children:"Stores the end-user information for a given user."}),"\n",(0,t.jsx)(n.p,{children:"By using this function, you can omit the contact information when using send(). NotificationAPI will automatically lookup the user's stored email or phone number and use it for sending the notification."}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.identifyUser({\n  id: 'spongebob.squarepants',\n  email: 'spongebob@squarepants.com',\n  number: '+15005550006',\n  pushTokens: [\n    {\n      type: PushProviders.FCM,\n      token: 'samplePushToken',\n      device: {\n        app_id: 'com.example.app',\n        ad_id: '1234567890',\n        device_id: '1234567890',\n        platform: 'android',\n        manufacturer: 'Samsung',\n        model: 'SM-G930F'\n      }\n    }\n  ],\n  webPushTokens: [\n    {\n      sub: {\n        endpoint:\n          'https://fcm.googleapis.com/fcm/send/fCs_4iba0Ao:APA91bGFdaU7I3****JMH_KeZwk1Xi',\n        keys: {\n          p256dh:\n            'zP2xFu3hMc2vNH5E2nuKkyjpZydvCk9llRUY2kP4****9aSlKcoadSV2UbvMRQ',\n          auth: 'CXEFun************tYe8g'\n        }\n      }\n    }\n  ]\n});\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def identify_user():\n    await notificationapi.identify_user({\n        "id": "spongebob.squarepants",\n        "email": "spongebob@squarepants.com",\n        "number": "+15005550006",\n        "pushTokens": [\n            {\n                "type": "FCM",\n                "token": "samplePushToken",\n                "device": {\n                    "app_id": "com.example.app",\n                    "ad_id": "1234567890",\n                    "device_id": "1234567890",\n                    "platform": "android",\n                    "manufacturer": "Samsung",\n                    "model": "SM-G930F"\n                }\n            }\n        ],\n        "webPushTokens": [\n            {\n                "sub": {\n                    "endpoint": "https://fcm.googleapis.com/fcm/send/fCs_4iba0Ao:APA91bGFdaU7I3****JMH_KeZwk1Xi",\n                    "keys": {\n                        "p256dh": "zP2xFu3hMc2vNH5E2nuKkyjpZydvCk9llRUY2kP4****9aSlKcoadSV2UbvMRQ",\n                        "auth": "CXEFun************tYe8g"\n                    }\n                }\n            }\n        ]\n    })\n\n# Run the async function\nasyncio.run(identify_user())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"$user = [\n    'id' => 'spongebob.squarepants',\n    'email' => 'spongebob@squarepants.com',\n    'number' => '+15005550006',\n    'pushTokens' => [\n        [\n            'type' => 'FCM',\n            'token' => 'samplePushToken',\n            'device' => [\n                'app_id' => 'com.example.app',\n                'ad_id' => '1234567890',\n                'device_id' => '1234567890',\n                'platform' => 'android',\n                'manufacturer' => 'Samsung',\n                'model' => 'SM-G930F'\n            ]\n        ]\n    ],\n    'webPushTokens' => [\n        [\n            'sub' => [\n                'endpoint' => 'https://fcm.googleapis.com/fcm/send/fCs_4iba0Ao:APA91bGFdaU7I3****JMH_KeZwk1Xi',\n                'keys' => [\n                    'p256dh' => 'zP2xFu3hMc2vNH5E2nuKkyjpZydvCk9llRUY2kP4****9aSlKcoadSV2UbvMRQ',\n                    'auth' => 'CXEFun************tYe8g'\n                ]\n            ]\n        ]\n    ]\n];\n\n$notificationAPI->identifyUser($user);\n"})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'number := "+15005550006"\nuser := NotificationAPI.User{\n\t\tId:     "spongebob.squarepants",\n\t\tEmail:  "spongebob@squarepants.com",\n\t\tNumber: &number,\n\t\tPushTokens: &[]NotificationAPI.UserPushToken{\n\t\t\t{\n\t\t\t\tType:  String("FCM"),\n\t\t\t\tToken: String("samplePushToken"),\n\t\t\t\tDevice: &NotificationAPI.UserPushTokenDevice{\n\t\t\t\t\tApp_id:        String("com.example.app"),\n\t\t\t\t\tAd_id:         String("1234567890"),\n\t\t\t\t\tDevice_id:     String("1234567890"),\n\t\t\t\t\tPlatform:      String("android"),\n\t\t\t\t\tManufacturer:  String("Samsung"),\n\t\t\t\t\tModel:         String("SM-G930F"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tWebPushTokens: &[]NotificationAPI.UserWebPushToken{\n\t\t\t{\n\t\t\t\tSub: struct {\n\t\t\t\t\tEndpoint string `json:"endpoint,omitempty"`\n\t\t\t\t\tKeys     struct {\n\t\t\t\t\t\tP256DH string `json:"p256dh,omitempty"`\n\t\t\t\t\t\tAuth   string `json:"auth,omitempty"`\n\t\t\t\t\t} `json:"keys,omitempty"`\n\t\t\t\t}{\n\t\t\t\t\tEndpoint: "https://fcm.googleapis.com/fcm/send/fCs_4iba0Ao:APA91bGFdaU7I3****JMH_KeZwk1Xi",\n\t\t\t\t\tKeys: struct {\n\t\t\t\t\t\tP256DH string `json:"p256dh,omitempty"`\n\t\t\t\t\t\tAuth   string `json:"auth,omitempty"`\n\t\t\t\t\t}{\n\t\t\t\t\t\tP256DH: "zP2xFu3hMc2vNH5E2nuKkyjpZydvCk9llRUY2kP4****9aSlKcoadSV2UbvMRQ",\n\t\t\t\t\t\tAuth:   "CXEFun************tYe8g",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\nvar params notificationapi.SetUserPreferencesRequest\nNotificationAPI.IdentifyUser(user)\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'var userId = "spongebob.squarepants";\n\nawait notificationApi.Identify(userId, new IdentifyUserData()\n{\n    Email = "spongebob.squarepants",\n    TelephoneNumber = "+15005550006"\n});\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'user_id = "spongebob.squarepants"\nuser_data = {\n  email: "spongebob@squarepants.com",\n  number: "+15005550006",\n  pushTokens: [\n    {\n      type: PushProviders::FCM, # Assuming PushProviders::FCM is defined\n      token: "samplePushToken",\n      device: {\n        app_id: "com.example.app",\n        ad_id: "1234567890",\n        device_id: "1234567890",\n        platform: "android",\n        manufacturer: "Samsung",\n        model: "SM-G930F"\n      }\n    }\n  ],\n  webPushTokens: [\n    {\n      sub: {\n        endpoint: "https://fcm.googleapis.com/fcm/send/fCs_4iba0Ao:APA91bGFdaU7I3****JMH_KeZwk1Xi",\n        keys: {\n          p256dh: "zP2xFu3hMc2vNH5E2nuKkyjpZydvCk9llRUY2kP4****9aSlKcoadSV2UbvMRQ",\n          auth: "CXEFun************tYe8g"\n        }\n      }\n    }\n  ]\n}\n\nnotification_api.identify_user(user_id, user_data)\n'})})})]}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"id"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the user in your system. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"email"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Required for sending email notifications, otherwise optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Required for SMS/CALL notifications, otherwise optional. Valid format: +15005550006. Unformatted US/Canada numbers are also accepted, e.g., (415) 555-1212, 415-555-1212, or 4155551212."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"timezone"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The user's timezone. Timezone names correspond to the Zone and Link names of the IANA Time Zone Database, such as 'America/New_York', 'America/Denver', 'EST', and 'UTC'."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"pushTokens"})}),(0,t.jsx)(n.td,{children:"object[]"}),(0,t.jsx)(n.td,{children:"Tokens which are required to send mobile push notifications, a user can have multiple devices and a push token is required for each device."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"webPushTokens"})}),(0,t.jsx)(n.td,{children:"object[]"}),(0,t.jsx)(n.td,{children:"Tokens which are required to send web push notification, a user can have multiple devices and a web push token is required for each device."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"pushtokens-object",children:"pushTokens object"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"type"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"[apn,fcm] The provider token is to be associated with. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"token"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The full token string. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"device"}),"*"]}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Information about the device the token is associated with. Required."})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"device-object",children:"device object"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"app_id"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Id of the application the token is used for."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ad_id"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Id of the advertising identifier."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"device"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Id of the device the token is associated with. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"platform"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The device platform i.e. android, ios."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"manufacturer"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The device manufacturer."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"model"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The device model ."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"webpushtokens-object",children:"webPushTokens object"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"sub"}),"*"]}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Web push subscription. Required."})]})})]}),"\n",(0,t.jsx)(n.h5,{id:"web-push-subscription-sub-object",children:"Web push subscription (sub) object"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"endpoint"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The string value containing the endpoint associated with the push subscription. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"keys"}),"*"]}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"The keys associated with the push subscription. Required."})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"web-push-subscription-keys-object",children:"Web push subscription keys object"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"p256dh"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"An Elliptic curve Diffie\u2013Hellman public key on the P-256 curve (that is, the NIST secp256r1 elliptic curve). The resulting key is an uncompressed point in ANSI X9.62 format. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"auth"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"An authentication secret, as described in Message Encryption for Web Push. Required."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"setuserpreferences",children:"setUserPreferences"}),"\n",(0,t.jsx)(n.p,{children:"Used to set a user's notification preferences. This function will override the user's existing preferences."}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.setUserPreferences('userId', [\n  {\n    notificationId: 'new_order',\n    channel: 'INAPP_WEB',\n    delivery: 'weekly'\n  },\n  {\n    notificationId: 'order_tracking',\n    channel: 'SMS',\n    delivery: 'weekly'\n  }\n]);\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def set_user_preferences():\n    await notificationapi.set_user_preferences("userId", [\n        {\n            "notificationId": "new_order",\n            "channel": "INAPP_WEB",\n            "delivery": "weekly"\n        },\n        {\n            "notificationId": "order_tracking",\n            "channel": "SMS",\n            "delivery": "weekly"\n        }\n    ])\n\n# Run the async function\nasyncio.run(set_user_preferences())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->setUserPreferences("userId", [\n    [\n        "notificationId" => "new_order",\n        "channel" => "INAPP_WEB",\n        "delivery" => "weekly"\n    ],\n    [\n        "notificationId" => "order_tracking",\n        "channel" => "SMS",\n        "delivery" => "weekly"\n    ]\n]);\n'})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'jsonParams := `[\n  {\n    notificationId: "new_order",\n    channel: "INAPP_WEB",\n    delivery: "weekly"\n  },\n  {\n    notificationId: "order_tracking",\n    channel: "SMS",\n    delivery: "weekly"\n  }\n]`\nvar params notificationapi.SetUserPreferencesRequest\njson.Unmarshal([]byte(jsonParams), &params)\nnotificationapi.SetUserPreferences("userId", params)\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await notificationApi.SetUserPreferences(userId, new SetUserPreferencesData(){\n    Preferences = [new NotificationPreference("order_tracking", NotificationChannel.EMAIL, true)]\n});\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"user_preferences = [\n  { 'notificationId' => 'new_order', 'channel' => 'INAPP_WEB', 'delivery' => 'weekly'},\n  { 'notificationId' => 'order_tracking', 'channel' => 'SMS', 'delivery' => 'weekly'}\n]\n\nnotification_api.set_user_preferences('userId', user_preferences)\n"})})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"userId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the user in your system. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"preferences"}),"*"]}),(0,t.jsx)(n.td,{children:"object[]"}),(0,t.jsx)(n.td,{children:"An array of preference objects."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"preference-object",children:"Preference Object"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"notificationId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the notification you wish to send. You can find this value from the dashboard."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"channel"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["The channel you wish to set the preference for. Accepted values: ",(0,t.jsx)("br",{}),(0,t.jsx)(n.code,{children:"EMAIL"}),", ",(0,t.jsx)(n.code,{children:"INAPP_WEB"}),", ",(0,t.jsx)(n.code,{children:"SMS"}),", ",(0,t.jsx)(n.code,{children:"CALL"}),", ",(0,t.jsx)(n.code,{children:"PUSH"}),", ",(0,t.jsx)(n.code,{children:"WEB_PUSH"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"delivery"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsxs)(n.td,{children:["The method for delivering the notification. Accepted values: ",(0,t.jsx)("br",{}),(0,t.jsx)(n.code,{children:"off"}),", ",(0,t.jsx)(n.code,{children:"instant"}),", ",(0,t.jsx)(n.code,{children:"hourly"}),", ",(0,t.jsx)(n.code,{children:"daily"}),", ",(0,t.jsx)(n.code,{children:"weekly"}),", ",(0,t.jsx)(n.code,{children:"monthly"})]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"deleteuserpreferences",children:"deleteUserPreferences"}),"\n",(0,t.jsx)(n.p,{children:"Used to delete any stored preferences for a user and notificationId or subNotificationId."}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.deleteUserPreferences(\n  'spongebob.squarepants',\n  'order_tracking'\n);\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def delete_user_preferences():\n    await notificationapi.delete_user_preferences({"notificationId": "order_tracking", "userId": "spongebob.squarepants"})\n\n# Run the async function\nasyncio.run(delete_user_preferences())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->deleteUserPreferences(["notificationId" => "order_tracking", "userId" => "spongebob.squarepants"]);\n'})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'jsonParams := `{\n  NotificationId: "order_tracking",\n  UserId: "spongebob.squarepants"\n}`\nvar params notificationapi.DeleteUserPreferencesRequest\njson.Unmarshal([]byte(jsonParams), &params)\nnotificationapi.DeleteUserPreferences(params);\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await notificationApi.DeleteUserPreferences(new DeleteUserPreferencesData(){\n    NotificationId = "order_tracking",\n    UserId = "spongebob.squarepants"\n});\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"notificationapi.deleteUserPreferences({\n  notificationId: 'order_tracking',\n  userId: 'spongebob.squarepants'\n});\n"})})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"userId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the user in your system. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"notificationId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the notification in NotificationAPI. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"subNotificationId"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The subNotificationId is used to specify further subcategories within a notification."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"updateinappnotification",children:"updateInAppNotification"}),"\n",(0,t.jsx)(n.p,{children:"Used to update the opened, archived, ... of an inapp notification."}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.deleteUserPreferences('spongebob.squarepants', {\n  trackingIds: ['sampleTrackingId'],\n  opened: '1970-01-01T00:00:00.000Z',\n  clicked: '1970-01-01T00:00:00.000Z',\n  archived: '1970-01-01T00:00:00.000Z',\n  actioned1: '1970-01-01T00:00:00.000Z',\n  actioned2: '1970-01-01T00:00:00.000Z',\n  reply: { date: '1970-01-01T00:00:00.000Z', message: 'nice!' }\n});\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def update_in_app_notification():\n    await notificationapi.update_in_app_notification("spongebob.squarepants", {\n        "trackingIds": ["sampleTrackingId"],\n        "opened": "1970-01-01T00:00:00.000Z",\n        "clicked": "1970-01-01T00:00:00.000Z",\n        "archived": "1970-01-01T00:00:00.000Z",\n        "actioned1": "1970-01-01T00:00:00.000Z",\n        "actioned2": "1970-01-01T00:00:00.000Z",\n        "reply": {"date": "1970-01-01T00:00:00.000Z", "message": "nice!"}\n    })\n\n# Run the async function\nasyncio.run(update_in_app_notification())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->delete_user_preferences("spongebob.squarepants", [\n    "trackingIds" => ["sampleTrackingId"],\n    "opened" => "1970-01-01T00:00:00.000Z",\n    "clicked" => "1970-01-01T00:00:00.000Z",\n    "archived" => "1970-01-01T00:00:00.000Z",\n    "actioned1" => "1970-01-01T00:00:00.000Z",\n    "actioned2" => "1970-01-01T00:00:00.000Z",\n    "reply" => ["date" => "1970-01-01T00:00:00.000Z", "message" => "nice!"]\n]);\n'})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'DeleteUserPreferences("spongebob.squarepants", map[string]interface{}{\n\t"trackingIds": []string{"sampleTrackingId"},\n\t"opened":      "1970-01-01T00:00:00.000Z",\n\t"clicked":     "1970-01-01T00:00:00.000Z",\n\t"archived":    "1970-01-01T00:00:00.000Z",\n\t"actioned1":   "1970-01-01T00:00:00.000Z",\n\t"actioned2":   "1970-01-01T00:00:00.000Z",\n\t"reply": map[string]interface{}{\n\t\t"date":    "1970-01-01T00:00:00.000Z",\n\t\t"message": "nice!",\n\t},\n})\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await notificationApi.DeleteUserPreferences("spongebob.squarepants", new Dictionary<string, object>\n{\n    {"trackingIds", new string[] {"sampleTrackingId"}},\n    {"opened", "1970-01-01T00:00:00.000Z"},\n    {"clicked", "1970-01-01T00:00:00.000Z"},\n    {"archived", "1970-01-01T00:00:00.000Z"},\n    {"actioned1", "1970-01-01T00:00:00.000Z"},\n    {"actioned2", "1970-01-01T00:00:00.000Z"},\n    {"reply", new Dictionary<string, object>\n        {\n            {"date", "1970-01-01T00:00:00.000Z"},\n            {"message", "nice!"}\n        }\n    }\n});\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"notificationapi.delete_user_preferences('spongebob.squarepants', {\n  'trackingIds' => ['sampleTrackingId'],\n  'opened' => '1970-01-01T00:00:00.000Z',\n  'clicked' => '1970-01-01T00:00:00.000Z',\n  'archived' => '1970-01-01T00:00:00.000Z',\n  'actioned1' => '1970-01-01T00:00:00.000Z',\n  'actioned2' => '1970-01-01T00:00:00.000Z',\n  'reply' => { 'date' => '1970-01-01T00:00:00.000Z', 'message' => 'nice!' }\n})\n"})})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"userId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the user in your system. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"params"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The inapp notification data you want to update. Required."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"params",children:"params"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"trackingIds"}),"*"]}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"The Tracking IDs of the notifications you want to update. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"opened"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A string representing the time when the notification was opened. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"clicked"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A string representing the time when the notification was clicked. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"archived"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A string representing the time when the notification was archived. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"actioned1"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A string representing the time when the first action associated with the notification was taken. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"actioned2"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A string representing the time when the second action associated with the notification was taken. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"reply.date"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A string representing the time of the reply to the notification. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"reply.message"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A string representing the content of the reply message. Optional."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"retract",children:"retract"}),"\n",(0,t.jsx)(n.p,{children:"Only applicable to in-app notifications. This function helps you delete all notifications of a certain type for a user."}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.retract({\n  notificationId: 'order_tracking',\n  userId: 'spongebob.squarepants'\n});\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def retract_notification():\n    await notificationapi.retract({"notificationId": "order_tracking", "userId": "spongebob.squarepants"})\n\n# Run the async function\nasyncio.run(retract_notification())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->retract(["notificationId" => "order_tracking", "userId" => "spongebob.squarepants"]);\n'})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'jsonParams := `{\n  NotificationId: "order_tracking",\n  UserId: "spongebob.squarepants"\n}`\nvar params notificationapi.RetractRequest\njson.Unmarshal([]byte(jsonParams), &params)\nnotificationapi.Retract(params);\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await notificationApi.Retract(new RetractNotificationData(){\n    NotificationId = "order_tracking",\n    UserId = "spongebob.squarepants"\n});\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"notificationapi.retract({\n  notificationId: 'order_tracking',\n  userId: 'spongebob.squarepants'\n});\n"})})})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"notificationId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the notification you wish to retract. You can find this value from the dashboard."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"userId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The ID of the user in your system. Required."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"secondaryId"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"For when you want to delete a specific subNotificationId."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"updateschedule",children:"updateSchedule"}),"\n",(0,t.jsxs)(n.p,{children:["This function enables you to update a scheduled notification by providing a ",(0,t.jsx)(n.code,{children:"trackingId"}),"."]}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.updateSchedule('172cf2f4-18cd-4f1f-b2ac-e50c7d71891c', {\n  schedule: '2024-02-20T14:38:03.509Z'\n});\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def update_schedule():\n    await notificationapi.update_schedule({\n        "tracking_id": "172cf2f4-18cd-4f1f-b2ac-e50c7d71891c",\n        "send_request": {"schedule": "2024-02-20T14:38:03.509Z"}\n    })\n\n# Run the async function\nasyncio.run(update_schedule())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->updateSchedule([\n    "trackingId" => "172cf2f4-18cd-4f1f-b2ac-e50c7d71891c",\n    "sendRequest" => [\n        "schedule" => "2024-02-20T14:38:03.509Z"\n    ]\n]);\n'})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'updateReq := NotificationAPI.UpdateScheduleRequest{\n\t\tSchedule: "2024-02-20T14:38:03.509Z",\n\t}\ntrackingId := "172cf2f4-18cd-4f1f-b2ac-e50c7d71891c"\nnotificationapi.UpdateSchedule(trackingId, updateReq)\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await notificationApi.UpdateSchedule("TRACKING_ID", new UpdateScheduleData(){\n    Schedule = new DateTime()\n});\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"notificationapi.update_schedule(\n  tracking_id: '172cf2f4-18cd-4f1f-b2ac-e50c7d71891c',\n  {\n\t\tschedule: \"2024-02-20T14:38:03.509Z\",\n\t}\n);\n"})})})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"trackingId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The tracking ID of the scheduled notification you wish to update. You can find this value from the dashboard."})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"deleteschedule",children:"deleteSchedule"}),"\n",(0,t.jsxs)(n.p,{children:["This function allows you to delete a scheduled notification by providing a ",(0,t.jsx)(n.code,{children:"trackingId"}),"."]}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.deleteSchedule('172cf2f4-18cd-4f1f-b2ac-e50c7d71891c');\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def delete_schedule():\n    await notificationapi.delete_schedule({\n        "tracking_id": "172cf2f4-18cd-4f1f-b2ac-e50c7d71891c"\n    })\n\n# Run the async function\nasyncio.run(delete_schedule())\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->deleteSchedule([\n    "trackingId" => "172cf2f4-18cd-4f1f-b2ac-e50c7d71891c"\n]);\n'})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:' trackingId := "172cf2f4-18cd-4f1f-b2ac-e50c7d71891c"\n notificationapi.DeleteSchedule(trackingId)\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await notificationApi.DeleteSchedule("TRACKING_ID");\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"notificationapi.delete_schedule('172cf2f4-18cd-4f1f-b2ac-e50c7d71891c');\n"})})})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"trackingId"}),"*"]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The tracking ID of the scheduled notification you wish to delete. You can find this value from the dashboard."})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"querylogs",children:"queryLogs"}),"\n",(0,t.jsx)(n.p,{children:"This function allows you to run queries on the logs of your send requests."}),"\n",(0,t.jsxs)(r.A,{groupId:"back-end-language",defaultValue:"js",values:[{label:"Node",value:"js"},{label:"Python",value:"python"},{label:"PHP",value:"php"},{label:"Go",value:"go"},{label:"C#",value:"csharp"},{label:"Ruby",value:"ruby"}],children:[(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"notificationapi.queryLogs({\n  dateRangeFilter: {\n    startTime: 1719600830559;\n    endTime: 1719600840559;\n  },\n  notificationFilter: ['order_tracking'],\n  channelFilter: ['EMAIL'];\n  userFilter: ['abcd-1234'],\n  statusFilter: ['SUCCESS'],\n  trackingIds: ['172cf2f4-18cd-4f1f-b2ac-e50c7d71891c'],\n  requestFilter: ['request.mergeTags.item=\"Krabby Patty Burger\"'],\n  envIdFilter: [\"6ok6imq9unr2budgiebjdaa6oi\"]\n});\n"})})}),(0,t.jsx)(a.A,{value:"python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import asyncio\n\nasync def query_logs():\n    await notificationapi.query_logs({\n        "dateRangeFilter": {\n            "startTime": 1719600830559,\n            "endTime": 1719600840559\n        },\n        "notificationFilter": ["order_tracking"],\n        "channelFilter": ["EMAIL"],\n        "userFilter": ["abcd-1234"],\n        "statusFilter": ["SUCCESS"],\n        "trackingIds": ["172cf2f4-18cd-4f1f-b2ac-e50c7d71891c"],\n        "requestFilter": [\'request.mergeTags.item="Krabby Patty Burger"\'],\n        "envIdFilter": ["6ok6imq9unr2budgiebjdaa6oi"]\n    })\n\n# To run the async function\nasyncio.run(query_logs())\n\n'})})}),(0,t.jsx)(a.A,{value:"php",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:'$notificationapi->queryLogs([\n    "dateRangeFilter" => [\n        "startTime" => 1719600830559,\n        "endTime" => 1719600840559,\n    ],\n    "notificationFilter" => [\'order_tracking\'],\n    "channelFilter" => [\'EMAIL\'],\n    "userFilter" => [\'abcd-1234\'],\n    "statusFilter" => [\'SUCCESS\'],\n    "trackingIds" => [\'172cf2f4-18cd-4f1f-b2ac-e50c7d71891c\'],\n    "requestFilter" => [\'request.mergeTags.item="Krabby Patty Burger"\'],\n    "envIdFilter" => [\'6ok6imq9unr2budgiebjdaa6oi\']\n]);\n'})})}),(0,t.jsx)(a.A,{value:"go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'params := map[string]interface{}{\n  "dateRangeFilter": map[string]interface{}{\n    "startTime": 1719600830559,\n    "endTime":   1719600840559,\n  },\n  "notificationFilter": []string{"order_tracking"},\n  "channelFilter":      []string{"EMAIL"},\n  "userFilter":         []string{"abcd-1234"},\n  "statusFilter":       []string{"SUCCESS"},\n  "trackingIds":        []string{"172cf2f4-18cd-4f1f-b2ac-e50c7d71891c"},\n  "requestFilter":      []string{`request.mergeTags.item="Krabby Patty Burger"`},\n  "envIdFilter":        []string{"6ok6imq9unr2budgiebjdaa6oi"},\n}\n\nnotificationAPI.QueryLogs(params)\n'})})}),(0,t.jsx)(a.A,{value:"csharp",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'var parameters = new Dictionary<string, object>\n        {\n            { "dateRangeFilter", new Dictionary<string, long> { { "startTime", 1719600830559 }, { "endTime", 1719600840559 } } },\n            { "notificationFilter", new List<string> { "order_tracking" } },\n            { "channelFilter", new List<string> { "EMAIL" } },\n            { "userFilter", new List<string> { "abcd-1234" } },\n            { "statusFilter", new List<string> { "SUCCESS" } },\n            { "trackingIds", new List<string> { "172cf2f4-18cd-4f1f-b2ac-e50c7d71891c" } },\n            { "requestFilter", new List<string> { @"request.mergeTags.item=""Krabby Patty Burger""" } },\n            { "envIdFilter", new List<string> { "6ok6imq9unr2budgiebjdaa6oi" } }\n        };\n\n        await notificationApi.QueryLogs(parameters);\n'})})}),(0,t.jsx)(a.A,{value:"ruby",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"params = {\n  dateRangeFilter: {\n    startTime: 1719600830559,\n    endTime: 1719600840559\n  },\n  notificationFilter: ['order_tracking'],\n  channelFilter: ['EMAIL'],\n  userFilter: ['abcd-1234'],\n  statusFilter: ['SUCCESS'],\n  trackingIds: ['172cf2f4-18cd-4f1f-b2ac-e50c7d71891c'],\n  requestFilter: ['request.mergeTags.item=\"Krabby Patty Burger\"'],\n  envIdFilter: ['6ok6imq9unr2budgiebjdaa6oi']\n}\n\nnotificationapi.query_logs(params)\n"})})})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dateRangeFilter"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Filters logs by a specific date range. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dateRangeFilter.startTime"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"The start time of the date range filter as a Unix timestamp. Optional. Cannot be less than your log retention period."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dateRangeFilter.endTime"})}),(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"The end time of the date range filter as a Unix timestamp. Optional."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"notificationFilter"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"Filters logs by specific notification IDs. Optional. This allows you to retrieve logs for particular notifications."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"channelFilter"})}),(0,t.jsx)(n.td,{children:"Channels[]"}),(0,t.jsx)(n.td,{children:"Filters logs by specific channels. Optional. This allows you to retrieve logs for certain channels like EMAIL, SMS, etc."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"userFilter"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"Filters logs by specific user IDs. Optional. This allows you to retrieve logs for particular users."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"statusFilter"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"Filters logs by specific statuses. Optional. This allows you to retrieve logs with particular statuses like sent, failed, etc."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"trackingIds"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"Filters logs by specific tracking IDs. Optional. This allows you to retrieve logs for particular tracking events."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"requestFilter"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"Filters logs by specific body request of your send request. Optional. This allows you to retrieve logs for particular requests."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"envIdFilter"})}),(0,t.jsx)(n.td,{children:"string[]"}),(0,t.jsx)(n.td,{children:"Filters logs by specific environment IDs. Optional. This allows you to retrieve logs for particular environments."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"customFilter"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"A custom filter for querying logs. Optional. This allows for more advanced and flexible querying of logs. Note: custom filter overwrites all the filters."})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"You can run more complex filters using customFilter. Note that customFilter overwrites all other filters in the request."}),"\n",(0,t.jsx)(r.A,{groupId:"log-query-customFilter",defaultValue:"js",values:[{label:"customFilter",value:"js"}],children:(0,t.jsx)(a.A,{value:"js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"fields @message| filter request.user.email like /com/ and request.user.email not like /gmail.com/| sort @timestamp desc\n"})})})})]})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},9365:(e,n,i)=>{i.d(n,{A:()=>a});i(6540);var t=i(4164);const s={tabItem:"tabItem_Ymn6"};var r=i(4848);function a(e){let{children:n,hidden:i,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,a),hidden:i,children:n})}},1470:(e,n,i)=>{i.d(n,{A:()=>I});var t=i(6540),s=i(4164),r=i(3104),a=i(6347),c=i(205),d=i(7485),o=i(1682),l=i(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:s}}=e;return{value:n,label:i,attributes:t,default:s}}))}(i);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:i}=e;const s=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,d.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function x(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,r=u(e),[a,d]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[o,h]=j({queryString:i,groupId:s}),[x,f]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,l.Dv)(i);return[s,(0,t.useCallback)((e=>{i&&r.set(e)}),[i,r])]}({groupId:s}),g=(()=>{const e=o??x;return p({value:e,tabValues:r})?e:null})();(0,c.A)((()=>{g&&d(g)}),[g]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),f(e)}),[h,f,r]),tabValues:r}}var f=i(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=i(4848);function b(e){let{className:n,block:i,selectedValue:t,selectValue:a,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),l=e=>{const n=e.currentTarget,i=d.indexOf(n),s=c[i].value;s!==t&&(o(n),a(s))},h=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const i=d.indexOf(e.currentTarget)+1;n=d[i]??d[0];break}case"ArrowLeft":{const i=d.indexOf(e.currentTarget)-1;n=d[i]??d[d.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":i},n),children:c.map((e=>{let{value:n,label:i,attributes:r}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>d.push(e),onKeyDown:h,onClick:l,...r,className:(0,s.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":t===n}),children:i??n},n)}))})}function y(e){let{lazy:n,children:i,selectedValue:r}=e;const a=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=x(e);return(0,m.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,m.jsx)(b,{...n,...e}),(0,m.jsx)(y,{...n,...e})]})}function I(e){const n=(0,f.A)();return(0,m.jsx)(v,{...e,children:h(e.children)},String(n))}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);